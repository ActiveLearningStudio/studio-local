{"version":3,"sources":["containers/Auth/SSOLogin.js"],"names":["withRouter","connect","state","user","auth","dispatch","handleSsoLogin","params","handleSsoLoginAction","props","match","useEffect","window","location","replace","JSON","parse","atob","ssodata","className"],"mappings":"mGAAA,iDA6CeA,sBAAWC,aARF,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAME,KAAKD,SAGQ,SAACE,GAAD,MAAe,CACxCC,eAAgB,SAACC,GAAD,OAAYF,EAASG,YAAqBD,QAGlCN,EAvC1B,SAAkBQ,GAChB,IACEC,EAGED,EAHFC,MACAP,EAEEM,EAFFN,KACAG,EACEG,EADFH,eAYF,OARAK,qBAAU,WACK,OAATR,EACFS,OAAOC,SAASC,QAAQ,WAExBR,EAAeS,KAAKC,MAAMC,KAAKP,EAAMH,OAAOW,aAE7C,CAACf,IAGF,qBAAKgB,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf","file":"static/js/52.8a3af3df.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { handleSsoLoginAction } from 'store/actions/auth';\nimport { withRouter } from 'react-router-dom';\n\nfunction SSOLogin(props) {\n  const {\n    match,\n    user,\n    handleSsoLogin,\n  } = props;\n\n  // Init\n  useEffect(() => {\n    if (user !== null) {\n      window.location.replace('/studio');\n    } else {\n      handleSsoLogin(JSON.parse(atob(match.params.ssodata)));\n    }\n  }, [user]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        Redirecting...\n      </div>\n    </div>\n  );\n}\n\nSSOLogin.propTypes = {\n  match: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  handleSsoLogin: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.auth.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleSsoLogin: (params) => dispatch(handleSsoLoginAction(params)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SSOLogin));\n"],"sourceRoot":""}