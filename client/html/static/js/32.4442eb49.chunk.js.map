{"version":3,"sources":["containers/LMS/Canvas/DeepLinking/Browse/index.js","containers/LMS/Canvas/DeepLinking/SearchForm/index.js","containers/LMS/Canvas/DeepLinking/SearchResults/index.js","containers/LMS/Canvas/DeepLinking/PreviewActivity/index.js","assets/images/logo.png","containers/LMS/Canvas/DeepLinking/SearchPage/index.js","services/canvas.service.js","store/actions/canvas.js","containers/LMS/Canvas/DeepLinking/Project/index.js"],"names":["Browse","props","match","browse","browseResults","useEffect","window","scrollTo","email","URL","location","href","searchParams","get","lms_url","params","lmsUrl","lti_client_id","ltiClientId","user_email","mode","className","style","width","src","gifloader","alt","length","Alert","variant","map","project","Project","id","defaultProps","withRouter","connect","state","canvas","dispatch","browseAction","showResults","showResultsAction","updateParams","updateParamsAction","userEmail","URLSearchParams","search","useState","advanced","setAdvanced","fieldChanged","e","target","name","value","onSubmit","preventDefault","type","placeholder","onChange","defaultValue","disabled","subjects","subject","levels","level","private","Form","Check","label","checked","SearchResults","hasMoreResults","projects","backToSearch","previousPage","nextPage","onClick","icon","from","searchHasMoreResults","searchProjects","backToSearchAction","previousPageAction","nextPageAction","searchAction","PreviewActivity","activity","closePreview","h5pSettings","getH5pSettings","H5PIntegration","h5p","settings","document","getElementById","innerHTML","embed_code","trim","newCss","core","styles","concat","loadedCss","Promise","all","link","createElement","rel","head","appendChild","scripts","loadedJs","forEach","script","async","body","title","finalUrl","decodeURIComponent","redirectUrl","encodeURIComponent","Swal","fire","html","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","searchPreviewActivity","closePreviewAction","getH5pSettingsAction","SearchPage","currentPage","section","setSection","logo","apiVersion","config","tsugiBaseUrl","httpService","post","data","catch","err","reject","response","projectId","activityId","session","gpb","score","axios","method","url","PHPSESSID","final_grade","actor","error","errors","console","log","a","canvasService","results","DO_BROWSE","DO_SEARCH","SHOW_RESULTS","BACK_TO_SEARCH","UPDATE_PARAMS","setPreviewActivityAction","SET_SEARCH_PREVIEW_ACTIVITY","CLOSE_SEARCH_PREVIEW_ACTIVITY","PREVIOUS_PAGE","NEXT_PAGE","showSearchProjectAction","fullProject","SHOW_SEARCH_PROJECT","showSearchPlaylistAction","playlist","SHOW_SEARCH_PLAYLIST","GET_H5P_SETTINGS","gradePassBackAction","isLearner","GRADE_PASS_BACK","activityInitAction","LTI_ACTIVITY_INIT","getLtiSummaryAction","summary","GET_LTI_SUMMARY","getLtiSummaryActivityInfoAction","summaryActivityInfo","GET_LTI_SUMMARY_ACTIVITY_INFO","selectedProject","selectedPlaylist","showProject","showPlaylist","setPreviewActivity","showActivityPreview","parseInt","activities","find","act","addToLMS","thumb_url","includes","global","resourceUrl","thumbnail","description","user","last_name","first_name","playlists","Item","Toggle","Menu","to","eventKey","onSelect","searchSelectedProject","searchSelectedPlaylist"],"mappings":"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","file":"static/js/32.4442eb49.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Alert } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { browseAction } from 'store/actions/canvas';\nimport Project from 'containers/LMS/Canvas/DeepLinking/Project';\nimport gifloader from 'assets/images/dotsloader.gif';\n// import './style.scss';\n\nconst Browse = (props) => {\n  const {\n    match,\n    browse,\n    browseResults,\n  } = props;\n\n  // Init\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const url = new URL(window.location.href);\n    const email = url.searchParams.get('user_email');\n    browse({\n      lms_url: match.params.lmsUrl,\n      lti_client_id: match.params.ltiClientId,\n      user_email: email,\n      mode: 'browse',\n    });\n  }, [match]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        {browseResults === null && (\n          <div className=\"row\">\n            <div className=\"col text-center\">\n              <img style={{ width: '50px' }} src={gifloader} alt=\"\" />\n            </div>\n          </div>\n        )}\n        {browseResults !== null && browseResults.length === 0 && (\n          <Alert variant=\"warning\">\n            No projects found.\n          </Alert>\n        )}\n        {browseResults !== null && browseResults.length > 0 && browseResults.map((project) => (\n          <Project project={project} key={project.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nBrowse.defaultProps = {\n  browseResults: null,\n};\n\nBrowse.propTypes = {\n  match: PropTypes.object.isRequired,\n  browseResults: PropTypes.array,\n  browse: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  browseResults: state.canvas.browseResults,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  browse: (params) => dispatch(browseAction(params)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Browse));\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport { showResultsAction, updateParamsAction } from 'store/actions/canvas';\nimport {\n  educationLevels as levels,\n  subjects,\n} from 'components/ResourceCard/AddResource/dropdownData';\nimport './style.scss';\n\nconst SearchForm = (props) => {\n  const {\n    match,\n    showResults,\n    params,\n    updateParams,\n  } = props;\n  const searchParams = new URLSearchParams(window.location.search);\n  const userEmail = searchParams.get('user_email'); // LMS user email\n  const [advanced, setAdvanced] = useState(false);\n  // Init\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    updateParams({\n      ...params,\n      ltiClientId: match.params.ltiClientId,\n      userEmail,\n      mode: 'search',\n    });\n  }, [match]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    showResults();\n  };\n\n  const fieldChanged = (e) => {\n    updateParams({\n      ...params,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"search-form\">\n      <div className=\"row mt-2\">\n        <div className=\"col\">\n          <div className=\"form-group\">\n            <input type=\"text\" className=\"form-control\" placeholder=\"Search Phrase\" name=\"query\" onChange={fieldChanged} />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"form-group\">\n            <select className=\"form-control\" name=\"private\" onChange={fieldChanged} defaultValue=\"0\">\n              <option value=\"0\">Public Activities</option>\n              <option value=\"1\">Private Activities</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      {advanced && (\n        <div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"form-group\">\n                <select className=\"form-control\" name=\"subject\" onChange={fieldChanged} defaultValue=\"\">\n                  <option value=\"\" disabled>Subject Area</option>\n                  {subjects.map((subject) => <option value={subject.value} key={subject.value}>{subject.subject}</option>)}\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"form-group\">\n                <select className=\"form-control\" name=\"level\" onChange={fieldChanged} defaultValue=\"\">\n                  <option value=\"\" disabled>Education Level</option>\n                  {levels.map((level) => <option value={level.value} key={level.value}>{level.name}</option>)}\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"form-group\">\n                <input type=\"date\" className=\"form-control\" placeholder=\"From Date\" name=\"start\" onChange={fieldChanged} />\n              </div>\n            </div>\n            <div className=\"col\">\n              <div className=\"form-group\">\n                <input type=\"date\" className=\"form-control\" placeholder=\"To Date\" name=\"end\" onChange={fieldChanged} />\n              </div>\n            </div>\n          </div>\n          { params.private !== '1' && (\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Author\" name=\"author\" onChange={fieldChanged} />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n      <Form.Check\n        type=\"switch\"\n        id=\"advancedSwitch\"\n        label=\"Advanced Search\"\n        checked={advanced}\n        onChange={() => setAdvanced(!advanced)}\n      />\n      <div className=\"row\">\n        <div className=\"col text-right\">\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary search-submit-button\" type=\"submit\">Search</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  match: PropTypes.object.isRequired,\n  params: PropTypes.object.isRequired,\n  showResults: PropTypes.func.isRequired,\n  updateParams: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  params: state.canvas.searchParams,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showResults: () => dispatch(showResultsAction()),\n  updateParams: (params) => dispatch(updateParamsAction(params)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SearchForm));\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Alert,\n} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import Swal from 'sweetalert2';\nimport {\n  backToSearchAction,\n  // setPreviewActivityAction,\n  // closePreviewAction,\n  previousPageAction,\n  nextPageAction,\n  searchAction,\n} from 'store/actions/canvas';\n// import PreviewActivity from 'containers/LMS/Canvas/DeepLinking/PreviewActivity';\nimport Project from 'containers/LMS/Canvas/DeepLinking/Project';\n// import './style.scss';\n\nconst SearchResults = (props) => {\n  const {\n    match,\n    searchParams,\n    hasMoreResults,\n    projects,\n    backToSearch,\n    previousPage,\n    nextPage,\n    search,\n  } = props;\n\n  // Init\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    search(searchParams);\n  }, [match, searchParams]);\n\n  return (\n    <div className=\"results\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Search Results</h2>\n        </div>\n        <div className=\"col text-right\">\n          <button type=\"button\" className=\"btn back-action\" onClick={backToSearch}>\n            <FontAwesomeIcon icon=\"chevron-left\" className=\"action-icon\" />\n            Back to Search\n          </button>\n        </div>\n      </div>\n      {projects !== null && projects.length === 0 && (\n        <div className=\"row\">\n          <div className=\"col\">\n            <Alert variant=\"warning\">\n              No results found.\n            </Alert>\n          </div>\n        </div>\n      )}\n      {projects !== null && projects.length > 0 && projects.map((project) => (\n        <Project project={project} key={project.id} />\n      ))}\n      <div className=\"row\">\n        <div className=\"col text-left\">\n          {(!!searchParams.from && searchParams.from !== 0) && (\n            <button type=\"button\" className=\"pagination-buttons\" onClick={previousPage}>Previous</button>\n          )}\n        </div>\n        <div className=\"col text-right\">\n          {hasMoreResults && (\n            <button type=\"button\" className=\"pagination-buttons\" onClick={nextPage}>Next</button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSearchResults.defaultProps = {\n  projects: null,\n};\n\nSearchResults.propTypes = {\n  match: PropTypes.object.isRequired,\n  searchParams: PropTypes.object.isRequired,\n  hasMoreResults: PropTypes.bool.isRequired,\n  projects: PropTypes.array,\n  backToSearch: PropTypes.func.isRequired,\n  previousPage: PropTypes.func.isRequired,\n  nextPage: PropTypes.func.isRequired,\n  search: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  searchParams: state.canvas.searchParams,\n  hasMoreResults: state.canvas.searchHasMoreResults,\n  projects: state.canvas.searchProjects,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  backToSearch: () => dispatch(backToSearchAction()),\n  previousPage: () => dispatch(previousPageAction()),\n  nextPage: () => dispatch(nextPageAction()),\n  search: (params) => dispatch(searchAction(params)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SearchResults));\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { closePreviewAction, getH5pSettingsAction } from 'store/actions/canvas';\nimport Swal from 'sweetalert2';\nimport gifloader from 'assets/images/dotsloader.gif';\nimport './style.scss';\n\nconst PreviewActivity = (props) => {\n  const {\n    activity,\n    closePreview,\n    h5pSettings,\n    getH5pSettings,\n    match,\n  } = props;\n\n  // Init\n  useEffect(() => {\n    getH5pSettings(activity.id);\n  }, [activity]);\n\n  // Load H5P\n  useEffect(() => {\n    if (h5pSettings === null) return;\n\n    window.H5PIntegration = h5pSettings.h5p.settings;\n    const h5pWrapper = document.getElementById('curriki-h5p-wrapper');\n    h5pWrapper.innerHTML = h5pSettings.h5p.embed_code.trim();\n    const newCss = h5pSettings.h5p.settings.core.styles.concat(\n      h5pSettings.h5p.settings.loadedCss,\n    );\n\n    Promise.all(\n      newCss.map((value) => {\n        const link = document.createElement('link');\n        link.href = value;\n        link.type = 'text/css';\n        link.rel = 'stylesheet';\n        document.head.appendChild(link);\n        return true;\n      }),\n    );\n\n    const newScripts = h5pSettings.h5p.settings.core.scripts.concat(\n      h5pSettings.h5p.settings.loadedJs,\n    );\n\n    newScripts.forEach((value) => {\n      const script = document.createElement('script');\n      script.src = value;\n      script.async = false;\n      document.body.appendChild(script);\n    });\n  }, [h5pSettings]);\n\n  const addToLMS = () => {\n    const finalUrl = `${decodeURIComponent(\n      match.params.redirectUrl,\n    )}&title=${encodeURIComponent(activity.title)}&entity=activity&id=${\n      activity.id\n    }`;\n    Swal.fire({\n      html: `You have selected <strong>Activity: ${activity.title}</strong><br>Do you want to continue ?`,\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ok',\n    }).then((result) => {\n      if (result.value) {\n        window.location.href = finalUrl;\n      }\n    });\n  };\n\n  return (\n    <div className=\"activity-wrapper mt-2\">\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <h2>\n            {`Previewing: ${activity.title}`}\n          </h2>\n        </div>\n        <div className=\"col text-right\">\n          <button type=\"button\" className=\"btn close-preview-button m-1\" onClick={addToLMS}>Add to Course</button>\n          <button type=\"button\" className=\"btn close-preview-button m-1\" onClick={closePreview}>Close Preview</button>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          {h5pSettings === null && (\n            <div className=\"loader_gif\">\n              <img style={{ width: '50px' }} src={gifloader} alt=\"\" />\n            </div>\n          )}\n          {h5pSettings !== null && (\n            <div id=\"curriki-h5p-wrapper\" />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPreviewActivity.defaultProps = {\n  h5pSettings: null,\n};\n\nPreviewActivity.propTypes = {\n  activity: PropTypes.object.isRequired,\n  h5pSettings: PropTypes.object,\n  getH5pSettings: PropTypes.func.isRequired,\n  closePreview: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  activity: state.canvas.searchPreviewActivity,\n  h5pSettings: state.canvas.h5pSettings,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  closePreview: () => dispatch(closePreviewAction()),\n  getH5pSettings: (id) => dispatch(getH5pSettingsAction(id)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PreviewActivity));\n","export default __webpack_public_path__ + \"static/media/logo.2e30b26e.png\";","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Browse from 'containers/LMS/Canvas/DeepLinking/Browse';\nimport SearchForm from 'containers/LMS/Canvas/DeepLinking/SearchForm';\nimport SearchResults from 'containers/LMS/Canvas/DeepLinking/SearchResults';\nimport PreviewActivity from 'containers/LMS/Canvas/DeepLinking/PreviewActivity';\nimport logo from 'assets/images/logo.png';\nimport './style.scss';\n\nconst SearchPage = (props) => {\n  const {\n    match,\n    currentPage,\n    searchPreviewActivity,\n  } = props;\n  const [section, setSection] = useState('browse');\n  // Init\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [match]);\n\n  return (\n    <div className=\"container canvas-search-page\">\n      <div className=\"row\">\n        <div className=\"col\">\n          {searchPreviewActivity === null && (\n            <ul className=\"nav nav-pills nav-fill mt-3\">\n              <li className=\"nav-item\">\n                <a className={section === 'browse' ? 'nav-link active' : 'nav-link'} href=\"#\" onClick={() => setSection('browse')}>Browse</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className={section === 'search' ? 'nav-link active' : 'nav-link'} href=\"#\" onClick={() => setSection('search')}>Search</a>\n              </li>\n            </ul>\n          )}\n        </div>\n        <div className=\"col text-right\">\n          <img className=\"mt-3\" src={logo} alt=\"Curriki Studio Logo\" />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          {searchPreviewActivity === null && section === 'browse' && <Browse /> }\n          {searchPreviewActivity === null && section === 'search' && (\n            <>\n              { currentPage === 'search' && <SearchForm /> }\n              { currentPage === 'results' && <SearchResults /> }\n            </>\n          )}\n          {searchPreviewActivity && <PreviewActivity /> }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSearchPage.defaultProps = {\n  searchPreviewActivity: null,\n};\n\nSearchPage.propTypes = {\n  match: PropTypes.object.isRequired,\n  currentPage: PropTypes.string.isRequired,\n  searchPreviewActivity: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n  currentPage: state.canvas.currentPage,\n  searchPreviewActivity: state.canvas.searchPreviewActivity,\n});\n\nexport default withRouter(connect(mapStateToProps)(SearchPage));\n","import axios from 'axios';\nimport config from 'config';\nimport httpService from './http.service';\n\nconst { apiVersion, tsugiBaseUrl } = config;\n\nconst browse = (params) => httpService\n  .post(\n    `/${apiVersion}/go/lms/projects`,\n    { ...params },\n  )\n  .then(({ data }) => data)\n  .catch((err) => Promise.reject(err.response.data));\n\nconst search = (params) => httpService\n  .post(\n    `/${apiVersion}/go/lms/projects`,\n    { ...params },\n  )\n  .then(({ data }) => data)\n  .catch((err) => Promise.reject(err.response.data));\n\nconst getProject = (projectId) => httpService\n  .get(`/${apiVersion}/go/lms/project/${projectId}`)\n  .then(({ data }) => data)\n  .catch((err) => Promise.reject(err.response.data));\n\nconst getH5pSettings = (activityId) => httpService\n  .get(`/${apiVersion}/google-classroom/activities/${activityId}/h5p-resource-settings`)\n  .then(({ data }) => data)\n  .catch((err) => Promise.reject(err.response.data));\n\nconst tsugiGradePassback = (session, gpb, score) => axios({\n  method: 'post',\n  url: tsugiBaseUrl,\n  params: { PHPSESSID: session, gpb, final_grade: score },\n})\n  .then((response) => response);\n\nconst getLtiSummary = (actor, activity) => httpService.post(\n `/${apiVersion}/outcome/summary`,\n { actor, activity },\n)\n.then(({ data }) => data)\n.catch((error) => {\n  if (error && error.response && error.response.data && error.response.data.errors) {\n    return error.response.data;\n  }\n\n  console.log('Unexpected error in summary endpoint:');\n  console.log(error);\n  return null;\n});\n\nexport default {\n  browse,\n  search,\n  getProject,\n  getH5pSettings,\n  tsugiGradePassback,\n  getLtiSummary,\n};\n","import canvasService from 'services/canvas.service';\nimport {\n  // Deeplinking browse tab\n  DO_BROWSE,\n  // Deelinking search tab\n  UPDATE_PARAMS,\n  BACK_TO_SEARCH,\n  DO_SEARCH,\n  SHOW_SEARCH_PROJECT,\n  SHOW_SEARCH_PLAYLIST,\n  SET_SEARCH_PREVIEW_ACTIVITY,\n  CLOSE_SEARCH_PREVIEW_ACTIVITY,\n  PREVIOUS_PAGE,\n  NEXT_PAGE,\n  SHOW_RESULTS,\n  // Other\n  GET_H5P_SETTINGS,\n  GRADE_PASS_BACK,\n  LTI_ACTIVITY_INIT,\n  GET_LTI_SUMMARY,\n  GET_LTI_SUMMARY_ACTIVITY_INFO,\n} from '../actionTypes';\n\n// Deeplinking browse tab\nexport const browseAction = (params) => async (dispatch) => {\n  const results = await canvasService.browse(params);\n  dispatch({\n    type: DO_BROWSE,\n    results,\n  });\n};\n\n// Deeplinking search tab\nexport const searchAction = (params) => async (dispatch) => {\n  const results = await canvasService.search(params);\n  dispatch({\n    type: DO_SEARCH,\n    results,\n  });\n};\n\nexport const showResultsAction = () => async (dispatch) => {\n  dispatch({\n    type: SHOW_RESULTS,\n  });\n};\n\nexport const backToSearchAction = () => async (dispatch) => {\n  dispatch({\n    type: BACK_TO_SEARCH,\n  });\n};\n\nexport const updateParamsAction = (params) => async (dispatch) => {\n  dispatch({\n    type: UPDATE_PARAMS,\n    params,\n  });\n};\n\nexport const setPreviewActivityAction = (activity) => async (dispatch) => {\n  dispatch({\n    type: SET_SEARCH_PREVIEW_ACTIVITY,\n    activity,\n  });\n};\n\nexport const closePreviewAction = () => async (dispatch) => {\n  dispatch({\n    type: CLOSE_SEARCH_PREVIEW_ACTIVITY,\n  });\n};\n\nexport const previousPageAction = () => async (dispatch) => {\n  dispatch({\n    type: PREVIOUS_PAGE,\n  });\n};\n\nexport const nextPageAction = () => async (dispatch) => {\n  dispatch({\n    type: NEXT_PAGE,\n  });\n};\n\nexport const showSearchProjectAction = (project) => async (dispatch) => {\n  const fullProject = await canvasService.getProject(project.id);\n  dispatch({\n    type: SHOW_SEARCH_PROJECT,\n    project: fullProject.project,\n  });\n};\n\nexport const showSearchPlaylistAction = (playlist) => async (dispatch) => {\n  dispatch({\n    type: SHOW_SEARCH_PLAYLIST,\n    playlist,\n  });\n};\n\n// Other\nexport const getH5pSettingsAction = (activityId) => async (dispatch) => {\n  const h5pSettings = await canvasService.getH5pSettings(activityId);\n  dispatch({\n    type: GET_H5P_SETTINGS,\n    h5pSettings,\n  });\n};\n\nexport const gradePassBackAction = (session, gpb, score, isLearner) => async (dispatch) => {\n  dispatch({\n    type: GRADE_PASS_BACK,\n  });\n  if (isLearner) await canvasService.tsugiGradePassback(session, gpb, score);\n};\n\nexport const activityInitAction = () => async (dispatch) => {\n  dispatch({\n    type: LTI_ACTIVITY_INIT,\n  });\n};\n\nexport const getLtiSummaryAction = (actor, activityId) => async (dispatch) => {\n  const summary = await canvasService.getLtiSummary(actor, activityId);\n  dispatch({\n    type: GET_LTI_SUMMARY,\n    summary,\n  });\n};\n\nexport const getLtiSummaryActivityInfoAction = (activityId) => async (dispatch) => {\n  const summaryActivityInfo = await canvasService.getH5pSettings(activityId);\n  dispatch({\n    type: GET_LTI_SUMMARY_ACTIVITY_INFO,\n    summaryActivityInfo,\n  });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Alert,\n  Image,\n  Card,\n  ListGroup,\n  Dropdown,\n} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Swal from 'sweetalert2';\nimport {\n  showSearchProjectAction,\n  showSearchPlaylistAction,\n  setPreviewActivityAction,\n} from 'store/actions/canvas';\nimport './style.scss';\n\nconst Project = (props) => {\n  const {\n    match,\n    project,\n    selectedProject,\n    selectedPlaylist,\n    showProject,\n    showPlaylist,\n    setPreviewActivity,\n  } = props;\n\n  const showActivityPreview = (id) => {\n    const activityId = parseInt(id, 10);\n    const activity = selectedPlaylist.activities.find(\n      (act) => act.id === activityId,\n    );\n\n    if (activity) {\n      setPreviewActivity(activity);\n    }\n  };\n\n  const addToLMS = (id) => {\n    const activityId = parseInt(id, 10);\n    const activity = selectedPlaylist.activities.find(\n      (act) => act.id === activityId,\n    );\n\n    if (!activity) return;\n\n    const finalUrl = `${decodeURIComponent(\n      match.params.redirectUrl,\n    )}&title=${encodeURIComponent(activity.title)}&entity=activity&id=${\n      activity.id\n    }`;\n    Swal.fire({\n      html: `You have selected <strong>Activity: ${activity.title}</strong><br>Do you want to continue ?`,\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Ok',\n    }).then((result) => {\n      if (result.value) {\n        window.location.href = finalUrl;\n      }\n    });\n  };\n\n  return (\n    <div className=\"row mt-2 mb-2 lti-deeplink-project-container\">\n      <div className=\"col\">\n        <div key={project.id} className=\"row result\">\n          <div className=\"col-2\">\n            <Image\n              src={\n                project.thumb_url.includes('pexels.com')\n                  ? project.thumb_url\n                  : `${global.config.resourceUrl}${project.thumb_url}`\n              }\n              thumbnail\n            />\n          </div>\n          <div className=\"col\">\n            <div className=\"row project-details-row\">\n              <div className=\"col\">\n                <h3>\n                  {project.title.length > 0 && project.title}\n                  {project.title.length === 0 && 'Project title not available'}\n                </h3>\n                <p>\n                  {project.description.length > 0 && project.description}\n                  {project.description.length === 0 && 'Project description not available'}\n                </p>\n                {project.user && (\n                  <p className=\"text-right\">\n                    <label>Author:</label>\n                    {` ${project.user.last_name}, ${project.user.first_name} (${project.user.email})`}\n                  </p>\n                )}\n              </div>\n            </div>\n            <div className=\"row playlists-row\">\n              <div className=\"col\">\n                {selectedProject?.id === project.id && (\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      {selectedProject.playlists.length === 0 && (\n                        <Alert variant=\"warning\">\n                          This project has no playlists\n                        </Alert>\n                      )}\n                      {selectedProject.playlists.length > 0 && (\n                        <Card className=\"mt-2\">\n                          <ListGroup variant=\"flush\">\n                            {selectedProject.playlists.map((playlist) => (\n                              <ListGroup.Item\n                                key={playlist.id}\n                                className=\"plist\"\n                                onClick={() => showPlaylist(playlist)}\n                              >\n                                <div className=\"row\">\n                                  <div className=\"col\">\n                                    <h4>\n                                      {playlist.title}\n                                    </h4>\n                                  </div>\n                                  <div className=\"col text-right\">\n                                    <FontAwesomeIcon\n                                      className=\"pull-right\"\n                                      icon=\"chevron-right\"\n                                    />\n                                  </div>\n                                </div>\n                                {selectedPlaylist?.id === playlist.id && playlist.activities.length === 0 && (\n                                  <Alert variant=\"warning\">\n                                    This playlist has no activities.\n                                  </Alert>\n                                  )}\n                                {selectedPlaylist?.id === playlist.id && playlist.activities.length > 0 && playlist.activities.map((activity) => (\n                                  <div className=\"row mt-2\" key={activity.id}>\n                                    <div className=\"col\">\n                                      <Image\n                                        src={\n                                          activity.thumb_url.includes(\n                                            'pexels.com',\n                                          )\n                                            ? activity.thumb_url\n                                            : `${global.config.resourceUrl}${activity.thumb_url}`\n                                        }\n                                        thumbnail\n                                      />\n                                    </div>\n                                    <div className=\"col\">\n                                      <h5>{activity.title}</h5>\n                                    </div>\n                                    <div className=\"col text-right\">\n                                      <Dropdown>\n                                        <Dropdown.Toggle className=\"actions-button\">\n                                          <FontAwesomeIcon icon=\"ellipsis-v\" />\n                                        </Dropdown.Toggle>\n                                        <Dropdown.Menu>\n                                          <Dropdown.Item\n                                            to=\"#\"\n                                            eventKey={activity.id}\n                                            onSelect={showActivityPreview}\n                                          >\n                                            <FontAwesomeIcon\n                                              icon=\"eye\"\n                                              className=\"action-icon\"\n                                            />\n                                            Preview\n                                          </Dropdown.Item>\n                                          <Dropdown.Item\n                                            to=\"#\"\n                                            eventKey={activity.id}\n                                            onSelect={addToLMS}\n                                          >\n                                            <FontAwesomeIcon\n                                              icon=\"plus\"\n                                              className=\"action-icon\"\n                                            />\n                                            Add to Course\n                                          </Dropdown.Item>\n                                        </Dropdown.Menu>\n                                      </Dropdown>\n                                    </div>\n                                  </div>\n                                ))}\n                              </ListGroup.Item>\n                            ))}\n                          </ListGroup>\n                        </Card>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          {selectedProject?.id !== project.id && (\n            <div className=\"col-2 text-right actions\">\n              <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={() => showProject(project)}\n              >\n                View Playlists\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nProject.defaultProps = {\n  project: null,\n  selectedProject: null,\n  selectedPlaylist: null,\n};\n\nProject.propTypes = {\n  match: PropTypes.object.isRequired,\n  project: PropTypes.object,\n  selectedProject: PropTypes.object,\n  selectedPlaylist: PropTypes.object,\n  showProject: PropTypes.func.isRequired,\n  showPlaylist: PropTypes.func.isRequired,\n  setPreviewActivity: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  selectedProject: state.canvas.searchSelectedProject,\n  selectedPlaylist: state.canvas.searchSelectedPlaylist,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showProject: (project) => dispatch(showSearchProjectAction(project)),\n  showPlaylist: (playlist) => dispatch(showSearchPlaylistAction(playlist)),\n  setPreviewActivity: (activity) => dispatch(setPreviewActivityAction(activity)),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Project),\n);\n"],"sourceRoot":""}