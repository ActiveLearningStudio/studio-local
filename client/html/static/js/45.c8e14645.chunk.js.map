{"version":3,"sources":["utils/index.js","containers/Auth/Error.js","containers/Auth/ForgotPasswordPage.js"],"names":["getErrors","e","errors","Array","isArray","Object","keys","forEach","key","concat","required","value","trim","undefined","maxLength","max","length","fadeAnimation","keyframes","fadeIn","FadeDiv","styled","div","alphaNumeric","RegExp","test","alphabetsOnly","Error","props","error","message","className","role","defaultProps","withRouter","connect","state","isLoading","auth","dispatch","forgotPassword","email","forgotPasswordAction","useState","setEmail","setError","onChangeEmail","useCallback","target","onSubmit","a","preventDefault","validator","isEmail","Swal","fire","icon","title","text","isDisabled","isEmpty","autoComplete","autoFocus","name","placeholder","onChange","type","disabled","src","loader","alt","to","bg","bg1"],"mappings":"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","file":"static/js/45.c8e14645.chunk.js","sourcesContent":["import styled, { keyframes } from 'styled-components';\nimport { fadeIn } from 'react-animations';\n\nexport function getErrors(e) {\n  if (e.errors) {\n    if (!Array.isArray(e.errors) && typeof e.errors === 'object') {\n      let errors = [];\n      Object.keys(e.errors).forEach((key) => {\n        if (Array.isArray(e.errors[key])) {\n          errors = errors.concat(e.errors[key]);\n        }\n      });\n\n      return { errors };\n    }\n  }\n\n  return e;\n}\n\nexport const required = (value) => (!!value && value.trim() ? undefined : '* Required');\n\nexport const maxLength = (max) => (value) => (value && value.length > max\n  ? `* Must be ${max} characters or less`\n  : undefined);\n\nconst fadeAnimation = keyframes`${fadeIn}`;\nexport const FadeDiv = styled.div`\n  animation: 0.8s ${fadeAnimation};\n`;\n\nexport const zeroFill = (value) => {\n  const newValue = `00${value}`;\n  return newValue.slice(newValue.length - 2, newValue.length);\n};\n\nexport const alphaNumeric = (value) => {\n  const alphaNumericRegex = new RegExp('[^0-9a-zA-Z@ ._-]');\n  return !alphaNumericRegex.test(value);\n};\n\nexport const alphabetsOnly = (value) => {\n  const alphaNumericRegex = new RegExp('[^a-zA-Z]');\n  return !alphaNumericRegex.test(value);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Error(props) {\n  const { error } = props;\n\n  if (!error) {\n    return null;\n  }\n\n  let message = '';\n\n  if (typeof error === 'string') {\n    message = error;\n  }\n\n  if (typeof error === 'object') {\n    if (error.errors && error.errors.length > 0) {\n      // eslint-disable-next-line prefer-destructuring\n      message = error.errors[0];\n    }\n\n    if (error.message) {\n      message = error.message;\n    } else if (error.error) {\n      message = error.error;\n    }\n  }\n\n  return (\n    <p className=\"error-msg alert alert-danger\" role=\"alert\">\n      {message}\n    </p>\n  );\n}\n\nError.propTypes = {\n  error: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nError.defaultProps = {\n  error: null,\n};\n\nexport default Error;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport validator from 'validator';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Swal from 'sweetalert2';\n\nimport bg from 'assets/images/loginbg.png';\nimport bg1 from 'assets/images/loginbg2.png';\nimport loader from 'assets/images/loader.svg';\nimport { forgotPasswordAction } from 'store/actions/auth';\nimport { getErrors } from 'utils';\nimport Error from './Error';\nimport Logo from './Logo';\n\nimport './style.scss';\n\nfunction ForgotPasswordPage(props) {\n  const { isLoading, forgotPassword } = props;\n\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(null);\n\n  const onChangeEmail = useCallback((e) => {\n    setEmail(e.target.value.trim());\n  }, [setEmail]);\n\n  const onSubmit = useCallback(async (e) => {\n    e.preventDefault();\n\n    try {\n      if (!validator.isEmail(email)) {\n        setError('Please input valid email.');\n        return;\n      }\n\n      setError(null);\n\n      await forgotPassword({ email });\n\n      Swal.fire({\n        icon: 'success',\n        title: 'Success',\n        text: 'Password reset email has been sent. Please follow the instructions.',\n      });\n    } catch (err) {\n      setError(getErrors(err));\n    }\n  }, [email, forgotPassword]);\n\n  const isDisabled = validator.isEmpty(email);\n\n  return (\n    <div className=\"auth-page\">\n      <Logo />\n\n      <div className=\"auth-container\">\n        <h1 className=\"auth-title\">Reset Password</h1>\n        <h3 className=\"auth-description\">\n          Please enter your CurrikiStudio account&apos;s email and click the button below,\n          then check your email for instructions on how to reset your password.\n        </h3>\n\n        <form\n          onSubmit={onSubmit}\n          autoComplete=\"off\"\n          className=\"auth-form\"\n        >\n          <div className=\"form-group\">\n            <FontAwesomeIcon icon=\"envelope\" />\n            <input\n              autoFocus\n              className=\"input-box\"\n              // type=\"email\"\n              name=\"email\"\n              placeholder=\"Email*\"\n              required\n              value={email}\n              onChange={onChangeEmail}\n            />\n          </div>\n\n          <Error error={error} />\n\n          <div className=\"form-group\">\n            <button\n              type=\"submit\"\n              className=\"signUp-btn submit\"\n              disabled={isLoading || isDisabled}\n            >\n              {isLoading ? (\n                <img src={loader} alt=\"\" />\n              ) : (\n                'Send Reset Password Link'\n              )}\n            </button>\n          </div>\n\n          <div className=\"form-group text-center\">\n            <Link to=\"/studio/login\">Back to Login</Link>\n          </div>\n        </form>\n      </div>\n\n      <img src={bg} className=\"bg1\" alt=\"\" />\n      <img src={bg1} className=\"bg2\" alt=\"\" />\n    </div>\n  );\n}\n\nForgotPasswordPage.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  forgotPassword: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  forgotPassword: (email) => dispatch(forgotPasswordAction(email)),\n});\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.auth.isLoading,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(ForgotPasswordPage),\n);\n"],"sourceRoot":""}