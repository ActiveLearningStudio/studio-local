{"version":3,"sources":["services/gapi.service.js","store/actions/gapi.js","helpers/xapi.js","services/canvas.service.js","store/actions/canvas.js","services/safelearn.service.js","store/actions/safelearn.js","containers/LMS/LTI/Activity/index.js"],"names":["apiVersion","config","gapiBaseUrl","token","axios","method","url","headers","Authorization","then","response","params","courseStates","activityId","studentId","submissionId","httpService","get","gcuid","submissionid","data","catch","err","Promise","reject","Swal","fire","title","icon","html","message","classworkId","courseId","post","course_id","access_token","gc_classwork_id","gc_submission_id","actor","activity","error","errors","console","log","googleShare","value","type","GOOGLE_SHARE","getProjectId","googleClassRoomLoginAction","dispatch","a","searchService","googleShareToken","JSON","stringify","tokenObj","getCourses","ALL_COURSES","payload","courses","googleClassRoomLoginFailure","id","GOOGLE_CLASSROOM_LOGIN_FAILURE","googleClassRoomLoginFailureAction","GOOGLE_CLASSROOM_LOGIN","confirmButtonColor","text","replace","e","setStudentAuthAction","gapiService","accessToken","studentProfile","SET_STUDENT_AUTH","studentData","auth","profile","refreshStudentAuthTokenAction","newToken","SET_STUDENT_AUTH_TOKEN","getStudentCoursesAction","coursesResponse","GET_STUDENT_COURSES","loadH5pResourceSettings","h5pSettings","GET_H5P_SETTINGS","getSubmissionAction","submission","GET_SUBMISSION","turnInAction","turnedIn","TURNED_IN_ACTIVITY","getSummaryAuthAction","summaryAuth","GET_SUMMARY_AUTH","getOutcomeSummaryAction","outcomeSummary","GET_OUTCOME_SUMMARY","isxAPINeeded","currentRoute","includes","extendStatement","h5pObj","statement","skipped","path","attemptId","homepage","toolPlatform","activeCourse","customCourseName","customApiDomainUrl","customCourseCode","platform","find","el","undefined","statementExtended","other","objectType","window","location","origin","push","object","definition","extensions","alternateLink","name","account","homePage","context","contextActivities","verb","display","result","score","min","max","interactionType","interactiveBookObject","libraryInfo","machineName","parent","chapterIndex","getActiveChapter","chapters","extendSharedActivityStatement","fakeSubId","Math","floor","random","toString","fakeAttemptId","fakeCourseId","document","referrer","tsugiBaseUrl","projectId","session","gpb","PHPSESSID","final_grade","browseAction","canvasService","results","DO_BROWSE","searchAction","DO_SEARCH","showResultsAction","SHOW_RESULTS","backToSearchAction","BACK_TO_SEARCH","updateParamsAction","UPDATE_PARAMS","setPreviewActivityAction","SET_SEARCH_PREVIEW_ACTIVITY","closePreviewAction","CLOSE_SEARCH_PREVIEW_ACTIVITY","previousPageAction","PREVIOUS_PAGE","nextPageAction","NEXT_PAGE","showSearchProjectAction","project","fullProject","SHOW_SEARCH_PROJECT","showSearchPlaylistAction","playlist","SHOW_SEARCH_PLAYLIST","getH5pSettingsAction","gradePassBackAction","isLearner","GRADE_PASS_BACK","activityInitAction","LTI_ACTIVITY_INIT","getLtiSummaryAction","summary","GET_LTI_SUMMARY","getLtiSummaryActivityInfoAction","summaryActivityInfo","GET_LTI_SUMMARY_ACTIVITY_INFO","accountId","authKey","unitPath","orgName","imagData","actualText","time","info","activityName","userName","workstationName","reportedAt","applicationName","ipAddress","image","content","saveResultScreenshotAction","org","studentName","parsedStatement","parse","category","account_id","api_key","unit_path","service","safeData","customhtml","createElement","setAttribute","innerHTML","description","body","prepend","html2canvas","scrollY","canvas","getElementById","remove","base64image","toDataURL","timeSafe","Date","getTime","reducer","intervalPointer","action","intervalId","clearInterval","Activity","props","match","ltiFinished","loadH5pSettings","sendStatement","gradePassBack","activityInit","sendScreenshot","searchParams","URLSearchParams","search","useState","xAPILoaded","setXAPILoaded","useReducer","xAPIEventHooked","setXAPIEventHooked","useEffect","scrollTo","H5PIntegration","h5p","settings","embed_code","trim","newCss","core","styles","concat","loadedCss","all","map","link","href","rel","head","appendChild","scripts","loadedJs","forEach","script","src","async","setInterval","x","getElementsByClassName","contentWindow","H5P","externalDispatcher","xAPIHelper","on","event","xapiData","this","interactions","interaction","getLastXAPIVerb","xAPIData","getXAPIData","iXAPIStatement","confirmButtonText","scaled","jsonStatement","organization","className","style","width","gifloader","alt","defaultProps","withRouter","connect","state","gapi","loadH5pResourceXapi"],"mappings":"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","file":"static/js/39.89f36138.chunk.js","sourcesContent":["import axios from 'axios';\nimport config from 'config';\nimport Swal from 'sweetalert2';\nimport httpService from './http.service';\n\nconst { apiVersion } = config;\nconst gapiBaseUrl = 'https://classroom.googleapis.com/v1';\n\nconst getStudentProfile = (token) => axios({\n  method: 'get',\n  url: `${gapiBaseUrl}/userProfiles/me`,\n  headers: {\n    Authorization: `Bearer ${token}`,\n  },\n})\n  .then((response) => response);\n\nconst getStudentCourses = (token) => axios({\n  method: 'get',\n  url: `${gapiBaseUrl}/courses`,\n  params: {\n    courseStates: 'ACTIVE',\n  },\n  headers: {\n    Authorization: `Bearer ${token}`,\n  },\n})\n  .then((response) => response);\n\nconst getCourse = (token, courseId) => axios({\n  method: 'get',\n  url: `${gapiBaseUrl}/courses/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${token}`,\n  },\n})\n  .then((response) => response);\n\nconst getSubmission = (classworkId, courseId, token) => httpService\n  .post(\n    `/${apiVersion}/google-classroom/classwork/${classworkId}/submission`,\n    { course_id: courseId, access_token: token },\n  )\n  .then(({ data }) => data)\n  .catch((err) => Promise.reject(err.response.data));\n\nconst turnIn = (classworkId, courseId, token) => httpService\n  .post(\n    `/${apiVersion}/google-classroom/turnin/${classworkId}`,\n    { course_id: courseId, access_token: token },\n  )\n  .then(({ data }) => data)\n  .catch((err) => Promise.reject(err.response.data));\n\nconst getSummaryAuth = (token, courseId, classworkId, submissionId) => httpService\n  .post(\n    `/${apiVersion}/google-classroom/validate-summary-access`,\n    {\n      course_id: courseId,\n      access_token: token,\n      gc_classwork_id: classworkId,\n      gc_submission_id: submissionId,\n    },\n  )\n  .then(({ data }) => data)\n  .catch((response) => response.response.data);\n\nconst getOutcomeSummary = (studentId, activityId) => httpService\n  .post(\n    `/${apiVersion}/outcome/summary`,\n    {\n      actor: studentId,\n      activity: activityId,\n    },\n  )\n  .then(({ data }) => data)\n  .catch((error) => {\n    if (error && error.response && error.response.data && error.response.data.errors) {\n      return error.response.data;\n    }\n\n    console.log('Unexpected error in summary endpoint:');\n    console.log(error);\n    return null;\n  });\n\nconst h5pResourceSettings = (activityId, studentId = null, submissionId = null) => httpService\n  .get(\n    `/${apiVersion}/google-classroom/activities/${activityId}/h5p-resource-settings`,\n    {},\n    {\n      gcuid: studentId,\n      submissionid: submissionId,\n    },\n  )\n  .then(({ data }) => data)\n  .catch((err) => {\n    Promise.reject(err.response.data);\n    Swal.fire({\n      title: 'Error',\n      icon: 'error',\n      html: err.message || 'Something went wrong! We are unable to load activity.',\n    });\n  });\n\nexport default {\n  getStudentProfile,\n  getStudentCourses,\n  getCourse,\n  h5pResourceSettings,\n  getSubmission,\n  turnIn,\n  getSummaryAuth,\n  getOutcomeSummary,\n};\n","import Swal from 'sweetalert2';\nimport searchService from 'services/search.service';\nimport gapiService from 'services/gapi.service';\nimport {\n  GOOGLE_CLASSROOM_LOGIN,\n  GOOGLE_CLASSROOM_LOGIN_FAILURE,\n  GOOGLE_SHARE,\n  LOAD_GOOGLE_CLASSROOM_COURSES,\n  ALL_COURSES,\n  GET_STUDENT_COURSES,\n  SET_STUDENT_AUTH,\n  SET_STUDENT_AUTH_TOKEN,\n  GET_H5P_SETTINGS,\n  GET_SUBMISSION,\n  TURNED_IN_ACTIVITY,\n  GET_SUMMARY_AUTH,\n  GET_OUTCOME_SUMMARY,\n} from '../actionTypes';\n\nexport const googleClassRoomLogin = (id) => ({\n  type: GOOGLE_CLASSROOM_LOGIN,\n  id,\n});\n\nexport const googleShare = (value) => ({\n  type: GOOGLE_SHARE,\n  value,\n});\n\nexport const loadCourses = (value) => ({\n  type: LOAD_GOOGLE_CLASSROOM_COURSES,\n  value,\n});\n\n// let projectId = '';\nexport const getProjectId = (/* id */) => {\n  // projectId = id;\n};\n\nexport const fetchCourses = () => {\n  Swal.fire({\n    title: 'Loading...',\n    showCancelButton: false,\n    showConfirmButton: false,\n    allowOutsideClick: false,\n  });\n};\n\n// shows the delete popup on activities, project, playlists\nexport const googleClassRoomLoginAction = (response) => async (dispatch) => {\n  dispatch(googleShare(true));\n\n  try {\n    // save access token\n    await searchService.googleShareToken(JSON.stringify(response.tokenObj));\n    const getCourses = await searchService.getCourses();\n    dispatch({\n      type: ALL_COURSES,\n      payload: getCourses.courses,\n    });\n\n    // dispatch(googleClassRoomLogin(response));\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const googleClassRoomLoginFailure = (id) => ({\n  type: GOOGLE_CLASSROOM_LOGIN_FAILURE,\n  id,\n});\n\n// shows the delete popup on activities, project, playlists\nexport const googleClassRoomLoginFailureAction = (response) => async (dispatch) => {\n  dispatch(googleShare('close'));\n  dispatch(googleClassRoomLogin(response));\n\n  try {\n    Swal.fire({\n      confirmButtonColor: '#5952c6',\n      icon: 'error',\n      text: response.error.replace(/_/g, ' '),\n    });\n\n    // dispatch(googleShare(true));\n    dispatch(googleClassRoomLoginFailure(response));\n  } catch (e) {\n    console.log(e);\n  }\n};\n\n// Set student auth data\nexport const setStudentAuthAction = (data) => async (dispatch) => {\n  // Auth data doesn't provide the google user ID so we get profile data\n  const studentProfile = await gapiService.getStudentProfile(data.accessToken);\n\n  dispatch({\n    type: SET_STUDENT_AUTH,\n    studentData: {\n      auth: data,\n      profile: studentProfile,\n    },\n  });\n};\n\nexport const refreshStudentAuthTokenAction = (newToken) => async (dispatch) => {\n  dispatch({\n    type: SET_STUDENT_AUTH_TOKEN,\n    newToken: { ...newToken },\n  });\n};\n\n// Gets courses for student\nexport const getStudentCoursesAction = (token) => async (dispatch) => {\n  const coursesResponse = await gapiService.getStudentCourses(token);\n  dispatch({\n    type: GET_STUDENT_COURSES,\n    coursesResponse,\n  });\n};\n\nexport const loadH5pResourceSettings = (activityId, studentId = null, submissionId = null) => async (dispatch) => {\n  const h5pSettings = await gapiService.h5pResourceSettings(activityId, studentId, submissionId);\n  dispatch({\n    type: GET_H5P_SETTINGS,\n    h5pSettings,\n  });\n};\n\nexport const getSubmissionAction = (classworkId, courseId, auth) => async (dispatch) => {\n  const submission = await gapiService.getSubmission(classworkId, courseId, JSON.stringify(auth.tokenObj))\n    .catch((err) => err);\n\n  dispatch({\n    type: GET_SUBMISSION,\n    submission,\n  });\n};\n\nexport const turnInAction = (classworkId, courseId, auth) => async (dispatch) => {\n  const turnedIn = await gapiService.turnIn(classworkId, courseId, JSON.stringify(auth.tokenObj));\n  dispatch({\n    type: TURNED_IN_ACTIVITY,\n    turnedIn,\n  });\n};\n\nexport const getSummaryAuthAction = (auth, courseId, classworkId, submissionId) => async (dispatch) => {\n  const summaryAuth = await gapiService.getSummaryAuth(JSON.stringify(auth.tokenObj), courseId, classworkId, submissionId);\n\n  dispatch({\n    type: GET_SUMMARY_AUTH,\n    summaryAuth,\n  });\n};\n\nexport const getOutcomeSummaryAction = (studentId, activityId) => async (dispatch) => {\n  const outcomeSummary = await gapiService.getOutcomeSummary(studentId, activityId);\n  dispatch({\n    type: GET_OUTCOME_SUMMARY,\n    outcomeSummary,\n  });\n};\n","// list of H5P activities links (react routes) where xAPI dispatch need to initialized\nexport function allowedH5PActvityPaths() {\n  return [\n    '/gclass/launch/:userId/:courseId/:activityId/:classworkId',\n    '/lti-tools/activity/:activityId',\n    '/activity/:activityId/shared',\n    '/genericlms/:lmsName/lmsurl/:lmsUrl/client/:lmsClientId/lmscourse/:lmsCourseId/lmsunit/:lmsUnitId/activity/:activityId',\n  ];\n}\n\n// map H5P activities links (react routes) to supported Platforms\nexport function H5PActvityPathMapToPlatform() {\n  return [\n    { '/project/:projectId/playlist/:playlistId/activity/:activityId/preview': 'CurrikiStudio' },\n    { '/activity/:activityId/shared': 'CurrikiStudio' },\n    { '/gclass/launch/:userId/:courseId/:activityId/:classworkId': 'Google Classroom' },\n    { '/lti-tools/activity/:activityId': 'LTI client' },\n    { '/genericlms/:lmsName/lmsurl/:lmsUrl/client/:lmsClientId/lmscourse/:lmsCourseId/lmsunit/:lmsUnitId/activity/:activityId': 'GenericLMS' },\n  ];\n}\n\n// check if xAPI need to initialized for H5P Activity link (react route)\nexport function isxAPINeeded(currentRoute) {\n  return allowedH5PActvityPaths().includes(currentRoute);\n}\n\nexport function extendStatement(h5pObj, statement, params, skipped = false) {\n  const {\n    path,\n    activityId,\n    submissionId,\n    attemptId,\n    studentId,\n    courseId, // LMS course id\n    homepage,\n    toolPlatform,\n    activeCourse,\n    customCourseName,\n    customApiDomainUrl,\n    customCourseCode,\n  } = params;\n\n  const platform = H5PActvityPathMapToPlatform().find((el) => el[path]);\n  if (platform === undefined) return;\n\n  const statementExtended = { ...statement };\n  const other = [\n    {\n      objectType: 'Activity',\n      id: `${window.location.origin}/activity/${activityId}/submission/${submissionId}/${attemptId}`,\n    },\n    {\n      objectType: 'Activity',\n      id: `${window.location.origin}/activity/${activityId}/submission/${submissionId}`,\n    },\n  ];\n\n  if (platform[path] === 'Google Classroom') {\n    other.push({\n      objectType: 'Activity',\n      id: `${window.location.origin}/gclass/${courseId}`,\n    });\n\n    if (statementExtended.object && statementExtended.object.definition && statementExtended.object.definition.extensions) {\n      statementExtended.object.definition.extensions['http://currikistudio.org/x-api/gclass-alternate-course-id'] = activeCourse.alternateLink;\n      statementExtended.object.definition.extensions['http://currikistudio.org/x-api/course-name'] = activeCourse.name;\n    }\n  }\n\n  if (platform[path] === 'LTI client' || 'GenericLMS') {\n    other.push({\n      objectType: 'Activity',\n      id: `${window.location.origin}/lti/${courseId}`,\n    });\n\n    if (statementExtended?.object?.definition?.extensions) {\n      statementExtended.object.definition.extensions['http://currikistudio.org/x-api/lms-course-name'] = customCourseName;\n      statementExtended.object.definition.extensions['http://currikistudio.org/x-api/lms-domain-url'] = customApiDomainUrl;\n      statementExtended.object.definition.extensions['http://currikistudio.org/x-api/lms-course-code'] = customCourseCode;\n    }\n  }\n\n  const actor = {\n    objectType: 'Agent',\n    account: {\n      homePage: homepage || 'https://classroom.google.com',\n      name: studentId,\n    },\n  };\n\n  if (statementExtended.context) {\n    if (platform[path] === 'LTI client') {\n      statementExtended.context.platform = toolPlatform;\n    } else {\n      statementExtended.context.platform = platform[path];\n    }\n\n    statementExtended.context.contextActivities.other = other;\n  }\n\n  statementExtended.actor = actor;\n\n  // If the statement is marked as skipped, we supply the proper verb\n  if (skipped) {\n    statementExtended.verb = {\n      id: 'http://adlnet.gov/expapi/verbs/skipped',\n      display: {\n        'en-US': 'skipped',\n      },\n    };\n\n    // Some skipped statements come with score.min = 0 and score.max = 0\n    // This causes an error in the backend\n    if (\n      statementExtended.result\n      && statementExtended.result.score\n      && statementExtended.result.score.min === statementExtended.result.score.max\n    ) {\n      statementExtended.result.score.max += 1;\n    }\n  }\n\n  // Some H5Ps provide incompatible interaction types. Mapping those to valid ones here\n  if (statementExtended.object && statementExtended.object.definition.interactionType === 'compound') {\n    statementExtended.object.definition.interactionType = 'choice';\n  }\n\n  // We need page information for InteractiveBook statements but the children objects are agnostic to where\n  // they're being used.\n  // Here we crawl up through their heritage to see if they belong to an InteractiveBook, if they do, we\n  // add the page info to the statement.\n  let interactiveBookObject = h5pObj;\n\n  while (interactiveBookObject && interactiveBookObject?.libraryInfo?.machineName !== 'H5P.InteractiveBook') {\n    interactiveBookObject = interactiveBookObject.parent;\n  }\n\n  if (interactiveBookObject?.libraryInfo?.machineName === 'H5P.InteractiveBook') {\n    const chapterIndex = interactiveBookObject.getActiveChapter();\n    statementExtended.object.definition.extensions['http://currikistudio.org/x-api/h5p-chapter-name'] = interactiveBookObject.chapters[chapterIndex].title;\n  }\n\n  return statementExtended;\n}\n\n// Extends the xAPI statements for activities being directly shared through studio\n// instead of published to an LMS\nexport function extendSharedActivityStatement(h5pObj, statement, params) {\n  const {\n    path,\n    activityId,\n  } = params;\n  const statementExtended = { ...statement };\n\n  // We fake these values for reporting features on anonymous routes\n  const fakeSubId = Math.floor(Math.random() * 100000).toString();\n  const fakeAttemptId = Math.floor(Math.random() * 100000).toString();\n  const fakeCourseId = Math.floor(Math.random() * 100000).toString();\n\n  const other = [\n    {\n      objectType: 'Activity',\n      id: `${window.location.origin}/activity/${activityId}/submission/${fakeSubId}/${fakeAttemptId}`,\n    },\n    {\n      objectType: 'Activity',\n      id: `${window.location.origin}/activity/${activityId}/submission/${fakeSubId}`,\n    },\n    {\n      objectType: 'Activity',\n      id: `${window.location.origin}/gclass/${fakeCourseId}`,\n    },\n  ];\n\n  const platform = H5PActvityPathMapToPlatform().find((el) => el[path]);\n  if (platform === undefined) return;\n\n  if (statementExtended?.context?.contextActivities) {\n    statementExtended.context.platform = platform[path];\n    statementExtended.context.contextActivities.other = other;\n  }\n\n  statementExtended.object.definition.extensions['http://id.tincanapi.com/extension/referrer'] = document.referrer ? document.referrer : window.location.origin;\n\n  return statementExtended;\n}\n","import axios from 'axios';\nimport config from 'config';\nimport httpService from './http.service';\n\nconst { apiVersion, tsugiBaseUrl } = config;\n\nconst browse = (params) => httpService\n  .post(\n    `/${apiVersion}/go/lms/projects`,\n    { ...params },\n  )\n  .then(({ data }) => data)\n  .catch((err) => Promise.reject(err.response.data));\n\nconst search = (params) => httpService\n  .post(\n    `/${apiVersion}/go/lms/projects`,\n    { ...params },\n  )\n  .then(({ data }) => data)\n  .catch((err) => Promise.reject(err.response.data));\n\nconst getProject = (projectId) => httpService\n  .get(`/${apiVersion}/go/lms/project/${projectId}`)\n  .then(({ data }) => data)\n  .catch((err) => Promise.reject(err.response.data));\n\nconst getH5pSettings = (activityId) => httpService\n  .get(`/${apiVersion}/google-classroom/activities/${activityId}/h5p-resource-settings`)\n  .then(({ data }) => data)\n  .catch((err) => Promise.reject(err.response.data));\n\nconst tsugiGradePassback = (session, gpb, score) => axios({\n  method: 'post',\n  url: tsugiBaseUrl,\n  params: { PHPSESSID: session, gpb, final_grade: score },\n})\n  .then((response) => response);\n\nconst getLtiSummary = (actor, activity) => httpService.post(\n `/${apiVersion}/outcome/summary`,\n { actor, activity },\n)\n.then(({ data }) => data)\n.catch((error) => {\n  if (error && error.response && error.response.data && error.response.data.errors) {\n    return error.response.data;\n  }\n\n  console.log('Unexpected error in summary endpoint:');\n  console.log(error);\n  return null;\n});\n\nexport default {\n  browse,\n  search,\n  getProject,\n  getH5pSettings,\n  tsugiGradePassback,\n  getLtiSummary,\n};\n","import canvasService from 'services/canvas.service';\nimport {\n  // Deeplinking browse tab\n  DO_BROWSE,\n  // Deelinking search tab\n  UPDATE_PARAMS,\n  BACK_TO_SEARCH,\n  DO_SEARCH,\n  SHOW_SEARCH_PROJECT,\n  SHOW_SEARCH_PLAYLIST,\n  SET_SEARCH_PREVIEW_ACTIVITY,\n  CLOSE_SEARCH_PREVIEW_ACTIVITY,\n  PREVIOUS_PAGE,\n  NEXT_PAGE,\n  SHOW_RESULTS,\n  // Other\n  GET_H5P_SETTINGS,\n  GRADE_PASS_BACK,\n  LTI_ACTIVITY_INIT,\n  GET_LTI_SUMMARY,\n  GET_LTI_SUMMARY_ACTIVITY_INFO,\n} from '../actionTypes';\n\n// Deeplinking browse tab\nexport const browseAction = (params) => async (dispatch) => {\n  const results = await canvasService.browse(params);\n  dispatch({\n    type: DO_BROWSE,\n    results,\n  });\n};\n\n// Deeplinking search tab\nexport const searchAction = (params) => async (dispatch) => {\n  const results = await canvasService.search(params);\n  dispatch({\n    type: DO_SEARCH,\n    results,\n  });\n};\n\nexport const showResultsAction = () => async (dispatch) => {\n  dispatch({\n    type: SHOW_RESULTS,\n  });\n};\n\nexport const backToSearchAction = () => async (dispatch) => {\n  dispatch({\n    type: BACK_TO_SEARCH,\n  });\n};\n\nexport const updateParamsAction = (params) => async (dispatch) => {\n  dispatch({\n    type: UPDATE_PARAMS,\n    params,\n  });\n};\n\nexport const setPreviewActivityAction = (activity) => async (dispatch) => {\n  dispatch({\n    type: SET_SEARCH_PREVIEW_ACTIVITY,\n    activity,\n  });\n};\n\nexport const closePreviewAction = () => async (dispatch) => {\n  dispatch({\n    type: CLOSE_SEARCH_PREVIEW_ACTIVITY,\n  });\n};\n\nexport const previousPageAction = () => async (dispatch) => {\n  dispatch({\n    type: PREVIOUS_PAGE,\n  });\n};\n\nexport const nextPageAction = () => async (dispatch) => {\n  dispatch({\n    type: NEXT_PAGE,\n  });\n};\n\nexport const showSearchProjectAction = (project) => async (dispatch) => {\n  const fullProject = await canvasService.getProject(project.id);\n  dispatch({\n    type: SHOW_SEARCH_PROJECT,\n    project: fullProject.project,\n  });\n};\n\nexport const showSearchPlaylistAction = (playlist) => async (dispatch) => {\n  dispatch({\n    type: SHOW_SEARCH_PLAYLIST,\n    playlist,\n  });\n};\n\n// Other\nexport const getH5pSettingsAction = (activityId) => async (dispatch) => {\n  const h5pSettings = await canvasService.getH5pSettings(activityId);\n  dispatch({\n    type: GET_H5P_SETTINGS,\n    h5pSettings,\n  });\n};\n\nexport const gradePassBackAction = (session, gpb, score, isLearner) => async (dispatch) => {\n  dispatch({\n    type: GRADE_PASS_BACK,\n  });\n  if (isLearner) await canvasService.tsugiGradePassback(session, gpb, score);\n};\n\nexport const activityInitAction = () => async (dispatch) => {\n  dispatch({\n    type: LTI_ACTIVITY_INIT,\n  });\n};\n\nexport const getLtiSummaryAction = (actor, activityId) => async (dispatch) => {\n  const summary = await canvasService.getLtiSummary(actor, activityId);\n  dispatch({\n    type: GET_LTI_SUMMARY,\n    summary,\n  });\n};\n\nexport const getLtiSummaryActivityInfoAction = (activityId) => async (dispatch) => {\n  const summaryActivityInfo = await canvasService.getH5pSettings(activityId);\n  dispatch({\n    type: GET_LTI_SUMMARY_ACTIVITY_INFO,\n    summaryActivityInfo,\n  });\n};\n","import axios from 'axios';\n\nconst safeApiAuth = (accountId, authKey) => axios\n  .post(`https://api.v10.learnsafe.com/accounts/${accountId}/integrators/auth/token`, null, {\n    headers: {\n      Authorization: `Bearer ${authKey}`,\n    },\n  })\n  .then(({ data }) => data)\n  .catch((err) => err.response.data);\n\nconst safeApiCheck = (token, accountId, unitPath, orgName, imagData, actualText, time, info, activityName) => axios\n  .post(`https://api.v10.learnsafe.com/accounts/${accountId}/integrators/content/check`,\n    {\n      userName: info,\n      workstationName: activityName,\n      reportedAt: time,\n      applicationName: orgName,\n      ipAddress: '0.0.0.0',\n      unitPath,\n      image: imagData,\n      content: actualText,\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n  .then(({ data }) => data)\n  .catch((err) => err.response.data);\n\nexport default {\n  safeApiAuth,\n  safeApiCheck,\n};\n","/* eslint-disable import/prefer-default-export */\nimport html2canvas from 'html2canvas';\nimport service from 'services/safelearn.service';\n\n// Generates a screenshot based on the statement data\nexport const saveResultScreenshotAction = (org, statement, title, studentName) => async (dispatch) => {\n  const parsedStatement = JSON.parse(statement);\n\n  if (\n    parsedStatement?.result?.response\n    && parsedStatement?.verb?.display['en-US'] === 'interacted'\n    && parsedStatement?.context?.contextActivities?.category[0]?.id === 'http://h5p.org/libraries/H5P.OpenEndedQuestion-1.0'\n    && org.account_id\n    && org.api_key\n    && org.unit_path\n    && org.name\n  ) {\n    const safeData = await service.safeApiAuth(org.account_id, org.api_key);\n    const customhtml = document.createElement('div');\n    customhtml.setAttribute('id', 'specfic-detail-safe-learn');\n    customhtml.innerHTML = `\n      <div>\n        <h3>${parsedStatement?.object?.definition?.description?.['en-US']}</h3>\n        <hr />\n        <h4>${parsedStatement?.result?.response}</h4>\n      </div>`;\n    document.body.prepend(customhtml);\n    html2canvas(customhtml, { scrollY: -window.scrollY })\n      .then((canvas) => {\n        document.getElementById('specfic-detail-safe-learn')?.remove();\n        const base64image = canvas.toDataURL('image/png');\n        if (safeData.data) {\n          const timeSafe = new Date();\n          service.safeApiCheck(\n            safeData.data.token,\n            org.account_id,\n            org.unit_path,\n            org.name,\n            base64image,\n            parsedStatement?.result?.response,\n            timeSafe.getTime(),\n            studentName,\n            title,\n          );\n        }\n      }).catch((err) => console.log(err));\n  }\n  dispatch({ type: 'SAFELEARN_ACTION' });\n};\n","/* eslint-disable react/no-this-in-sfc */\nimport React, { useEffect, useState, useReducer } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Swal from 'sweetalert2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport gifloader from 'assets/images/dotsloader.gif';\nimport * as xAPIHelper from 'helpers/xapi';\nimport { loadH5pResourceXapi } from 'store/actions/resource';\nimport { loadH5pResourceSettings } from 'store/actions/gapi';\nimport { gradePassBackAction, activityInitAction } from 'store/actions/canvas';\nimport { saveResultScreenshotAction } from 'store/actions/safelearn';\nimport './style.scss';\n\nconst reducer = (intervalPointer, action) => {\n  if (action.type === 'set') return action.intervalId;\n\n  if (action.type === 'clear') {\n    clearInterval(intervalPointer);\n    return null;\n  }\n};\n\nconst Activity = (props) => {\n  const {\n    match,\n    h5pSettings,\n    ltiFinished,\n    attemptId,\n    loadH5pSettings,\n    sendStatement,\n    gradePassBack,\n    activityInit,\n    sendScreenshot,\n  } = props;\n  const { activityId } = match.params;\n  const searchParams = new URLSearchParams(window.location.search);\n  const session = searchParams.get('PHPSESSID');\n  const studentId = searchParams.get('user_id');\n  const submissionId = searchParams.get('submission_id');\n  const homepage = searchParams.get('homepage');\n  const isLearner = searchParams.get('is_learner') !== '';\n  const courseId = searchParams.get('course_id');\n  const toolPlatform = searchParams.get('tool_platform');\n  const customCourseName = searchParams.get('custom_course_name');\n  const customApiDomainUrl = searchParams.get('custom_api_domain_url');\n  const customCourseCode = searchParams.get('custom_course_code');\n  const [xAPILoaded, setXAPILoaded] = useState(false);\n  const [intervalPointer, dispatch] = useReducer(reducer, 0);\n  const [xAPIEventHooked, setXAPIEventHooked] = useState(false);\n\n  // Init\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    loadH5pSettings(match.params.activityId);\n    activityInit();\n  }, [activityId]);\n\n  // Load H5P\n  useEffect(() => {\n    if (h5pSettings === null) return;\n\n    window.H5PIntegration = h5pSettings.h5p.settings;\n    const h5pWrapper = document.getElementById('curriki-h5p-wrapper');\n    h5pWrapper.innerHTML = h5pSettings.h5p.embed_code.trim();\n    const newCss = h5pSettings.h5p.settings.core.styles.concat(\n      h5pSettings.h5p.settings.loadedCss,\n    );\n\n    Promise.all(\n      newCss.map((value) => {\n        const link = document.createElement('link');\n        link.href = value;\n        link.type = 'text/css';\n        link.rel = 'stylesheet';\n        document.head.appendChild(link);\n        return true;\n      }),\n    );\n\n    const newScripts = h5pSettings.h5p.settings.core.scripts.concat(\n      h5pSettings.h5p.settings.loadedJs,\n    );\n\n    newScripts.forEach((value) => {\n      const script = document.createElement('script');\n      script.src = value;\n      script.async = false;\n      document.body.appendChild(script);\n    });\n  }, [h5pSettings]);\n\n  useEffect(() => {\n    // Loops until it finds H5P object\n    const intervalId = setInterval(() => {\n      const x = document.getElementsByClassName('h5p-iframe')[0]?.contentWindow;\n      if (!x?.H5P?.externalDispatcher) return;\n\n      console.log('H5P dispatcher found');\n      setXAPILoaded(true);\n      console.log(`Clearing interval ${intervalPointer}`);\n      dispatch({ type: 'clear' });\n    }, 500);\n    dispatch({ type: 'set', intervalId });\n  }, []);\n\n  // Patch into xAPI events\n  useEffect(() => {\n    console.log('Patching into xAPI event dispatcher');\n    if (!xAPILoaded || !isLearner || xAPIEventHooked) {\n      console.log('Abort patching into xAPI event dispatcher');\n      return;\n    }\n\n    const x = document.getElementsByClassName('h5p-iframe')[0]?.contentWindow;\n    // if (!x.H5P.externalDispatcher || xAPIHelper.isxAPINeeded(match.path) === false) return;\n    if (!x.H5P.externalDispatcher || xAPIHelper.isxAPINeeded(match.path) === false) {\n      console.log('Missing H5P event dispatcher');\n      return;\n    }\n\n    x.H5P.externalDispatcher.on('xAPI', function (event) {\n      console.log('Running xAPI listener callback');\n      const params = {\n        path: match.path,\n        studentId,\n        activityId,\n        submissionId,\n        attemptId,\n        homepage,\n        courseId,\n        toolPlatform,\n        customCourseName,\n        customApiDomainUrl,\n        customCourseCode,\n      };\n\n      // Extending the xAPI statement with our custom values and sending it off to LRS\n      const xapiData = xAPIHelper.extendStatement(this, event.data.statement, params);\n\n      if (event.data.statement.verb.display['en-US'] === 'submitted-curriki') {\n        // Check if all questions/interactions have been accounted for in LRS\n        // If the user skips one of the questions, no xAPI statement is generated.\n        // We need statements for all questions for proper summary accounting.\n        // Fire off an artificial \"answered\" statement if necessary\n        if (this.parent === undefined && this.interactions) {\n          this.interactions.forEach((interaction) => {\n            if (interaction.getLastXAPIVerb()) return; // Already initialized\n\n            const xAPIData = interaction.getXAPIData();\n            if (!xAPIData) return; // Some interactions have no data to report\n\n            const iXAPIStatement = JSON.stringify(\n              xAPIHelper.extendStatement(this, xAPIData.statement, params, true),\n            );\n            sendStatement(iXAPIStatement);\n          }, this);\n        }\n\n        sendStatement(JSON.stringify(xapiData));\n        Swal.fire({\n          title: 'Turn in results?',\n          confirmButtonText: 'OK',\n        }).then(() => {\n          const score = xapiData.result.score.scaled;\n          gradePassBack(session, 1, score, isLearner);\n          Swal.fire('Saved!', '', 'success');\n        });\n      } else {\n        const jsonStatement = JSON.stringify(xapiData);\n        sendStatement(jsonStatement);\n        if (h5pSettings?.organization?.api_key) {\n          sendScreenshot(h5pSettings.organization, jsonStatement, h5pSettings.activity.title, params.studentId);\n        }\n      }\n    });\n    console.log('Patched into xAPI event dispatcher');\n    setXAPIEventHooked(true);\n  }, [xAPILoaded]);\n\n  return (\n    <div>\n      {ltiFinished && (\n        <div className=\"p-5 text-center finished-div\">\n          <h1>You have completed this activity!</h1>\n          <FontAwesomeIcon icon=\"thumbs-o-up\" className=\"action-icon ml-1\" />\n        </div>\n      )}\n\n      {!ltiFinished && (\n        <div id=\"curriki-h5p-wrapper\" className=\"added-middle-height-width\">\n          <div className=\"loader_gif\">\n            <img style={{ width: '50px' }} src={gifloader} alt=\"\" />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nActivity.defaultProps = {\n  h5pSettings: null,\n  attemptId: null,\n};\n\nActivity.propTypes = {\n  match: PropTypes.object.isRequired,\n  h5pSettings: PropTypes.object,\n  ltiFinished: PropTypes.bool.isRequired,\n  attemptId: PropTypes.number,\n  loadH5pSettings: PropTypes.func.isRequired,\n  sendStatement: PropTypes.func.isRequired,\n  gradePassBack: PropTypes.func.isRequired,\n  activityInit: PropTypes.func.isRequired,\n  sendScreenshot: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  h5pSettings: state.gapi.h5pSettings,\n  ltiFinished: state.canvas.ltiFinished,\n  attemptId: state.canvas.attemptId,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadH5pSettings: (activityId) => dispatch(loadH5pResourceSettings(activityId)),\n  sendStatement: (statement) => dispatch(loadH5pResourceXapi(statement)),\n  gradePassBack: (session, gpb, score, isLearner) => dispatch(gradePassBackAction(session, gpb, score, isLearner)),\n  activityInit: () => dispatch(activityInitAction()),\n  sendScreenshot: (org, statement, title, studentName) => dispatch(saveResultScreenshotAction(org, statement, title, studentName)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Activity));\n"],"sourceRoot":""}