{"version":3,"sources":["../node_modules/react-bootstrap/esm/divWithClassName.js","containers/Search/SearchNetlify.js"],"names":["className","React","forwardRef","p","ref","createElement","_extends","classNames","paginationStarter","SearchInterface","allState","useSelector","state","search","activityTypesState","resource","types","dispatch","useDispatch","useState","activityTypes","setActivityTypes","setSearch","searchQueries","SetSearchQuery","searchInput","setSearchInput","meta","setMeta","activePage","setActivePage","totalCount","setTotalCount","activeModel","setActiveModel","activeType","setActiveType","activeSubject","setActiveSubject","activeEducation","setActiveEducation","searchType","authorName","useEffect","searchResult","length","searchQuery","searchMeta","localStorage","setItem","Swal","close","total","loadResourceTypesAction","compare","a","b","bandA","title","toUpperCase","bandB","comparison","allItems","map","data","activityItems","itm","push","sort","defaultActiveKey","Toggle","as","Card","Header","eventKey","icon","Collapse","Body","value","onChange","e","target","onKeyPress","key","trim","fire","html","allowOutsideClick","onBeforeOpen","showLoading","dataSend","phrase","subjectArray","gradeArray","authors","undefined","standardArray","size","openprojectsearch","result","tempEducation","tempSubject","forEach","edu","String","includes","temp","replace","sub","type","placeholder","onClick","author","from","style","display","subjects","subject","filter","index","educationLevels","name","h5pLib","id","onSelect","searchData","resultModel","model","res","thumb_url","backgroundImage","global","config","resourceUrl","href","rel","user","first_name","description","projects","playlists","activities","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass"],"mappings":"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","file":"static/js/43.c43d2ef9.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return /*#__PURE__*/React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Accordion,\n  Card,\n  Tabs,\n  Tab,\n  Alert,\n} from 'react-bootstrap';\nimport { educationLevels, subjects } from 'components/ResourceCard/AddResource/dropdownData';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Swal from 'sweetalert2';\nimport Pagination from 'react-js-pagination';\nimport { openprojectsearch } from 'store/actions/search';\nimport { loadResourceTypesAction } from 'store/actions/resource';\n\nimport './style.scss';\n\nlet paginationStarter = true;\n\nfunction SearchInterface() {\n  // const { history } = props;\n  const allState = useSelector((state) => state.search);\n  const activityTypesState = useSelector((state) => state.resource.types);\n  // const { currentOrganization } = useSelector((state) => state.organization);\n  const dispatch = useDispatch();\n  const [activityTypes, setActivityTypes] = useState([]);\n  const [search, setSearch] = useState([]);\n  const [searchQueries, SetSearchQuery] = useState('');\n  const [searchInput, setSearchInput] = useState('');\n  const [meta, setMeta] = useState({});\n  const [activePage, setActivePage] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n  const [activeModel, setActiveModel] = useState('');\n  const [activeType, setActiveType] = useState([]);\n  const [activeSubject, setActiveSubject] = useState([]);\n  const [activeEducation, setActiveEducation] = useState([]);\n  const [searchType] = useState(null);\n  const [authorName] = useState('');\n  useEffect(() => {\n    if (allState.searchResult) {\n      if (allState.searchResult.length > 0) {\n        setSearch(allState.searchResult);\n        SetSearchQuery(allState.searchQuery);\n        setSearchInput(allState.searchQuery);\n        setMeta(allState.searchMeta);\n        localStorage.setItem('loading', 'false');\n        Swal.close();\n      } else if (allState.searchMeta.total === 0) {\n        setSearch([]);\n        SetSearchQuery(allState.searchQuery);\n        setSearchInput(allState.searchQuery);\n        setMeta({});\n        localStorage.setItem('loading', 'false');\n        Swal.close();\n      }\n    }\n  }, [allState.searchMeta, allState.searchQuery, allState.searchResult]);\n\n  useEffect(() => {\n    if (allState.searchResult) {\n      if (allState.searchResult.length > 0 && paginationStarter) {\n        paginationStarter = false;\n        setTotalCount(allState.searchMeta.total);\n      }\n    }\n  }, [allState.searchMeta, allState.searchResult, totalCount]);\n\n  useEffect(() => {\n    setActiveEducation([]);\n    setActiveSubject([]);\n    setActiveType([]);\n    if (activityTypesState.length === 0) {\n      dispatch(loadResourceTypesAction());\n    }\n  }, []);\n\n  const compare = (a, b) => {\n    // Use toUpperCase() to ignore character casing\n    const bandA = a.title.toUpperCase();\n    const bandB = b.title.toUpperCase();\n\n    let comparison = 0;\n    if (bandA > bandB) {\n      comparison = 1;\n    } else if (bandA < bandB) {\n      comparison = -1;\n    }\n    return comparison;\n  };\n\n  useEffect(() => {\n    const allItems = [];\n    activityTypesState.map((data) => data.activityItems.map((itm) => allItems.push(itm)));\n    setActivityTypes(allItems.sort(compare));\n  }, [activityTypesState]);\n  // console.log(activeSubject, activeEducation);\n  return (\n    <>\n      <div>\n        <div className=\"content-wrapper\">\n          <div className=\"content\">\n            {true\n                ? (\n                  <div className=\"search-result-main\">\n                    <div className=\"total-count\">\n                      {totalCount > 10000\n                        ? (\n                          <div>\n                            Your search returned more than\n                            {' '}\n                            <span>10,000</span>\n                            {' '}\n                            results. Please refine your search criteria.\n                          </div>\n                        )\n                        : null}\n                      {!!searchQueries && (\n                        <div>\n                          Showing\n                          {' '}\n                          {search ? meta.total : '0'}\n                          {' '}\n                          results For\n                          {' '}\n                          <span>{searchQueries}</span>\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"main-content-search\">\n                      <div className=\"left-search\">\n                        <div className=\"search-library\">\n                          <Accordion defaultActiveKey=\"0\">\n                            <Card>\n                              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                Search Library\n                                <FontAwesomeIcon className=\"ml-2\" icon=\"plus\" />\n                              </Accordion.Toggle>\n\n                              <Accordion.Collapse eventKey=\"0\">\n                                <Card.Body>\n                                  <div className=\"body-search\">\n                                    <input\n                                      value={searchInput}\n                                      onChange={(e) => {\n                                        setSearchInput(e.target.value);\n                                      }}\n                                      onKeyPress={async (e) => {\n                                        if (e.key === 'Enter') {\n                                          if (!searchInput.trim()) {\n                                            Swal.fire('Search field is required.');\n                                          } else if (searchInput.length > 255) {\n                                            Swal.fire('Character limit should be less than 255.');\n                                          } else {\n                                            Swal.fire({\n                                              title: 'Searching...', // add html attribute if you want or remove\n                                              html: 'We are fetching results for you!',\n                                              allowOutsideClick: false,\n                                              onBeforeOpen: () => {\n                                                Swal.showLoading();\n                                              },\n                                            });\n                                            const dataSend = {\n                                              phrase: searchInput.trim(),\n                                              subjectArray: activeSubject,\n                                              gradeArray: activeEducation,\n                                              authors: authorName || undefined,\n                                              standardArray: activeType,\n                                              size: 20,\n                                            };\n                                            const result = await dispatch(openprojectsearch(dataSend));\n                                            setTotalCount(result.meta?.total);\n                                            const tempEducation = [];\n                                            const tempSubject = [];\n                                            if (activeEducation) {\n                                              activeEducation.forEach((edu) => {\n                                                if (String(edu).includes('&')) {\n                                                  const temp = String(edu).replace('&', 'and');\n                                                  tempEducation.push(temp);\n                                                } else {\n                                                  tempEducation.push(edu);\n                                                }\n                                              });\n                                              setActiveEducation(tempEducation);\n                                            }\n                                            if (activeSubject) {\n                                              activeSubject.forEach((sub) => {\n                                                if (String(sub).includes('&')) {\n                                                  const temp = String(sub).replace('&', 'and');\n                                                  tempSubject.push(temp);\n                                                } else {\n                                                  tempSubject.push(sub);\n                                                }\n                                              });\n                                              setActiveSubject(tempSubject);\n                                            }\n                                            // // eslint-disable-next-line max-len\n                                            // history.push(`/org/${currentOrganization?.domain}/search?q=${searchInput.trim()}&type=${searchType}&grade=${tempSubject}&education=${tempEducation}&h5p=${activeType}&author=${authorName}`);\n                                          }\n                                        }\n                                      }}\n                                      type=\"search\"\n                                      placeholder=\"Search\"\n                                    />\n                                    <div\n                                      className=\"src-btn\"\n                                      onClick={async () => {\n                                        if (!searchInput.trim()) {\n                                          Swal.fire('Search field is required.');\n                                        } else if (searchInput.length > 255) {\n                                          Swal.fire('Character limit should be less than 255.');\n                                        } else {\n                                          Swal.fire({\n                                            title: 'Searching...', // add html attribute if you want or remove\n                                            html: 'We are fetching results for you!',\n                                            allowOutsideClick: false,\n                                            onBeforeOpen: () => {\n                                              Swal.showLoading();\n                                            },\n                                          });\n                                          const dataSend = {\n                                            phrase: searchInput.trim(),\n                                            subjectArray: activeSubject,\n                                            author: authorName || undefined,\n                                            gradeArray: activeEducation,\n                                            standardArray: activeType,\n                                            from: 0,\n                                            size: 20,\n                                          };\n                                          const result = await dispatch(openprojectsearch(dataSend));\n                                          setTotalCount(result.meta?.total);\n                                          const tempEducation = [];\n                                          const tempSubject = [];\n                                          if (activeEducation) {\n                                            activeEducation.forEach((edu) => {\n                                              if (String(edu).includes('&')) {\n                                                const temp = String(edu).replace('&', 'and');\n                                                tempEducation.push(temp);\n                                              } else {\n                                                tempEducation.push(edu);\n                                              }\n                                            });\n                                            setActiveEducation(tempEducation);\n                                          }\n                                          if (activeSubject) {\n                                            activeSubject.forEach((sub) => {\n                                              if (String(sub).includes('&')) {\n                                                const temp = String(sub).replace('&', 'and');\n                                                tempSubject.push(temp);\n                                              } else {\n                                                tempSubject.push(sub);\n                                              }\n                                            });\n                                            setActiveSubject(tempSubject);\n                                          }\n                                          // eslint-disable-next-line max-len\n                                         // history.push(`/org/${currentOrganization?.domain}/search?q=${searchInput.trim()}&type=${searchType}&grade=${tempSubject}&education=${tempEducation}&h5p=${activeType}&author=${authorName}`);\n                                        }\n                                        // setModalShow(true);\n                                      }}\n                                    >\n                                      Search\n                                    </div>\n                                  </div>\n                                </Card.Body>\n                              </Accordion.Collapse>\n                            </Card>\n                          </Accordion>\n                        </div>\n\n                        <div className=\"refine-search\" style={{ display: 'none' }}>\n                          <div className=\"headline\">Refine your search</div>\n\n                          <Accordion defaultActiveKey=\"0\">\n                            <Card>\n                              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                Subject\n                                <FontAwesomeIcon className=\"ml-2\" icon=\"plus\" />\n                              </Accordion.Toggle>\n                              <Accordion.Collapse eventKey=\"0\">\n                                <Card.Body>\n                                  {subjects.map((data) => (\n                                    <div\n                                      className=\"list-item-keys\"\n                                      key={data.value}\n                                      value={data.subject}\n                                      onClick={() => {\n                                        if (activeSubject.includes(data.subject)) {\n                                          if (data.subject === 'Career & Technical Education') {\n                                            setActiveSubject(activeSubject.filter((index) => {\n                                              if (index === 'Career & Technical Education' || index === 'Career and Technical Education') {\n                                                return false;\n                                              }\n                                              return true;\n                                            }));\n                                          } else {\n                                            setActiveSubject(activeSubject.filter((index) => index !== data.subject));\n                                          }\n                                        } else {\n                                          setActiveSubject([...activeSubject, data.subject]);\n                                        }\n                                      }}\n                                    >\n                                      {data.subject === 'Career & Technical Education'\n                                        ? (activeSubject.includes('Career & Technical Education') || activeSubject.includes('Career and Technical Education'))\n                                          ? <FontAwesomeIcon icon=\"check-square\" /> : <FontAwesomeIcon icon=\"square\" />\n                                      : activeSubject.includes(data.subject) ? (\n                                        <FontAwesomeIcon icon=\"check-square\" />\n                                      ) : (\n                                        <FontAwesomeIcon icon=\"square\" />\n                                      )}\n                                      <span>{data.subject}</span>\n                                    </div>\n                                  ))}\n                                </Card.Body>\n                              </Accordion.Collapse>\n                            </Card>\n\n                            <Card>\n                              <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                                Education Level\n                                <FontAwesomeIcon className=\"ml-2\" icon=\"plus\" />\n                              </Accordion.Toggle>\n\n                              <Accordion.Collapse eventKey=\"1\">\n                                <Card.Body>\n                                  {educationLevels.map((data) => (\n                                    <div\n                                      className=\"list-item-keys\"\n                                      key={data.value}\n                                      value={data.name}\n                                      onClick={() => {\n                                        if (activeEducation.includes(data.name)) {\n                                          if (data.name === 'College & Beyond') {\n                                            setActiveSubject(activeEducation.filter((index) => {\n                                              if (index === 'College & Beyondn' || index === 'College and Beyond') {\n                                                return false;\n                                              }\n                                              return true;\n                                            }));\n                                          } else {\n                                            setActiveEducation(activeEducation.filter((index) => index !== data.name));\n                                          }\n                                        } else {\n                                          setActiveEducation([...activeEducation, data.name]);\n                                        }\n                                      }}\n                                    >\n                                      {data.name === 'College & Beyond'\n                                        ? (activeEducation.includes('College & Beyond') || activeEducation.includes('College and Beyond'))\n                                          ? <FontAwesomeIcon icon=\"check-square\" /> : <FontAwesomeIcon icon=\"square\" />\n                                      : activeEducation.includes(data.name) ? (\n                                        <FontAwesomeIcon icon=\"check-square\" />\n                                      ) : (\n                                        <FontAwesomeIcon icon=\"square\" />\n                                      )}\n\n                                      <span>{data.name}</span>\n                                    </div>\n                                  ))}\n                                </Card.Body>\n                              </Accordion.Collapse>\n                            </Card>\n\n                            <Card>\n                              <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                                Type of Activity\n                                <FontAwesomeIcon className=\"ml-2\" icon=\"plus\" />\n                              </Accordion.Toggle>\n                              <Accordion.Collapse eventKey=\"3\">\n                                <Card.Body\n                                  style={{\n                                    'max-height': '300px',\n                                    'overflow-y': 'auto',\n                                  }}\n                                >\n                                  {activityTypes.map((data) => (\n                                    <div\n                                      className=\"list-item-keys\"\n                                      key={data.id}\n                                      value={data.h5pLib}\n                                      onClick={() => {\n                                        if (activeType.includes(data.h5pLib)) {\n                                          // eslint-disable-next-line eqeqeq\n                                          setActiveType(activeType.filter((index) => index != data.h5pLib));\n                                        } else {\n                                          setActiveType([...activeType, data.h5pLib]);\n                                        }\n                                      }}\n                                    >\n                                      {activeType.includes(data.h5pLib) ? (\n                                        <FontAwesomeIcon icon=\"check-square\" />\n                                      ) : (\n                                        <FontAwesomeIcon icon=\"square\" />\n                                      )}\n                                      <span>{data.title}</span>\n                                    </div>\n                                  ))}\n                                </Card.Body>\n                              </Accordion.Collapse>\n                            </Card>\n                          </Accordion>\n                        </div>\n                      </div>\n\n                      <div className=\"right-search\">\n                        <Tabs\n                          defaultActiveKey=\"total\"\n                          id=\"uncontrolled-tab-example\"\n                          onSelect={async (e) => {\n                            if (e === 'total') {\n                              let searchData;\n                              if (searchType === 'orgSearch') {\n                                searchData = {\n                                from: 0,\n                                size: 20,\n                                type: searchType,\n                                author: authorName || undefined,\n\n                                subjectArray: activeSubject,\n                                gradeArray: activeEducation,\n                                standardArray: activeType,\n                              };\n                              } else {\n                                searchData = {\n                                  phrase: searchQueries.trim(),\n                                  from: 0,\n                                  size: 20,\n                                  author: authorName || undefined,\n                                  type: searchType,\n                                  subjectArray: activeSubject,\n                                  gradeArray: activeEducation,\n                                  standardArray: activeType,\n                                };\n                              }\n                              Swal.fire({\n                                title: 'Loading...', // add html attribute if you want or remove\n                                allowOutsideClick: false,\n                                onBeforeOpen: () => {\n                                  Swal.showLoading();\n                                },\n                              });\n                              const resultModel = await dispatch(openprojectsearch(searchData));\n                              Swal.close();\n                              setTotalCount(resultModel.meta[e]);\n                              setActiveModel(e);\n                              setActivePage(1);\n                            } else {\n                              let searchData;\n                              if (searchType === 'orgSearch') {\n                                searchData = {\n                                from: 0,\n                                size: 20,\n                                author: authorName || undefined,\n                                model: e,\n                                type: searchType,\n                                subjectArray: activeSubject,\n                                gradeArray: activeEducation,\n                                standardArray: activeType,\n                              };\n                              } else {\n                                searchData = {\n                                  phrase: searchQueries.trim(),\n                                  from: 0,\n                                  size: 20,\n                                  model: e,\n                                  author: authorName || undefined,\n                                  type: searchType,\n                                  subjectArray: activeSubject,\n                                  gradeArray: activeEducation,\n                                  standardArray: activeType,\n                                };\n                              }\n                              Swal.fire({\n                                title: 'Loading...', // add html attribute if you want or remove\n                                allowOutsideClick: false,\n                                onBeforeOpen: () => {\n                                  Swal.showLoading();\n                                },\n                              });\n                              const resultModel = await dispatch(openprojectsearch(searchData));\n                              Swal.close();\n                              setTotalCount(resultModel.meta[e]);\n                              setActiveModel(e);\n                              setActivePage(1);\n                            }\n                          }}\n                        >\n                          <Tab\n                            eventKey=\"total\"\n                            title={\n                              !!search && !!meta.total\n                                ? `all (${meta.total})`\n                                : 'all (0)'\n                            }\n                          >\n                            <div className=\"results_search\">\n                              {!!search && search.length > 0 ? (\n                                search.map((res) => (\n                                  <div className=\"box\">\n                                    <div className=\"imgbox\">\n                                      {res.thumb_url ? (\n                                        <div\n                                          style={{\n                                            backgroundImage: res.thumb_url.includes('pexels.com')\n                                              ? `url(${res.thumb_url})`\n                                              : `url(${global.config.resourceUrl}${res.thumb_url})`,\n                                          }}\n                                        />\n                                      ) : (\n                                        <div\n                                          style={{\n                                            // eslint-disable-next-line max-len\n                                            backgroundImage: 'https://images.pexels.com/photos/593158/pexels-photo-593158.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=1&amp;fit=crop&amp;h=200&amp;w=280',\n                                          }}\n                                        />\n                                      )}\n\n                                      {/* <h5>CALCULUS</h5> */}\n                                    </div>\n                                    <div className=\"content\">\n                                      <div className=\"search-content\">\n                                        <a\n                                          href={\n                                            res.model === 'Activity'\n                                              // eslint-disable-next-line max-len\n                                              ? `/studio/activity/${res.id}/shared`\n                                              : res.model === 'Playlist'\n                                                ? `/studio/playlist/${res.id}/preview/lti`\n                                                : `/studio/project/${res.id}/shared`\n                                          }\n                                          target=\"_blank\"\n                                          rel=\"noreferrer\"\n                                        >\n                                          <h2>{res.title || res.name}</h2>\n                                        </a>\n                                        <ul>\n                                          {res.user && (\n                                            <li>\n                                              by\n                                              {' '}\n                                              <span>\n                                                {res.user.first_name}\n                                              </span>\n                                            </li>\n                                          )}\n                                          <li>\n                                            Type\n                                            {' '}\n                                            <span className=\"type\">{res.model}</span>\n                                          </li>\n                                          {/* <li>\n                                            Member Rating{\" \"}\n                                            <span className=\"type\">Project</span>\n                                          </li> */}\n                                        </ul>\n                                        <p>{res.description}</p>\n                                      </div>\n                                    </div>\n                                  </div>\n                                ))\n                              ) : (\n                                <div className=\"box\">No result found !</div>\n                              )}\n                            </div>\n                          </Tab>\n\n                          <Tab\n                            eventKey=\"projects\"\n                            title={\n                              !!search && !!meta.projects\n                                ? `project (${meta.projects})`\n                                : 'project (0)'\n                            }\n                          >\n                            <div className=\"results_search\">\n                              {!!search && search.length > 0 ? (\n                                search.map((res) => (\n                                  <>\n                                    {res.model === 'Project' && (\n                                      <div className=\"box\">\n                                        <div className=\"imgbox\">\n                                          {res.thumb_url ? (\n                                            <div\n                                              style={{\n                                                backgroundImage: res.thumb_url.includes('pexels.com')\n                                                  ? `url(${res.thumb_url})`\n                                                  : `url(${global.config.resourceUrl}${res.thumb_url})`,\n                                              }}\n                                            />\n                                          ) : (\n                                            <div\n                                              style={{\n                                                // eslint-disable-next-line max-len\n                                                backgroundImage: 'https://images.pexels.com/photos/593158/pexels-photo-593158.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=1&amp;fit=crop&amp;h=200&amp;w=280',\n                                              }}\n                                            />\n                                          )}\n\n                                          {/* <h5>CALCULUS</h5> */}\n                                        </div>\n                                        <div className=\"content\">\n                                          <div className=\"search-content\">\n                                            <a\n                                              href={\n                                                res.model === 'Activity'\n                                                  ? `/studio/activity/${res.id}/shared`\n                                                  : res.model === 'Playlist'\n                                                    ? `/studio/playlist/${res.id}/preview/lti`\n                                                    : `/studio/project/${res.id}/shared`\n                                              }\n                                              target=\"_blank\"\n                                              rel=\"noreferrer\"\n                                            >\n                                              <h2>{res.title || res.name}</h2>\n                                            </a>\n                                            <ul>\n                                              {res.user && (\n                                                <li>\n                                                  by\n                                                  {' '}\n                                                  <span>\n                                                    {res.user.first_name}\n                                                  </span>\n                                                </li>\n                                              )}\n                                              <li>\n                                                Type\n                                                {' '}\n                                                <span className=\"type\">{res.model}</span>\n                                              </li>\n                                              {/* <li>\n                                                Member Rating{\" \"}\n                                                <span className=\"type\">Project</span>\n                                              </li> */}\n                                            </ul>\n                                            <p>{res.description}</p>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    )}\n                                  </>\n                                ))\n                              ) : (\n                                <div className=\"box\">No result found !</div>\n                              )}\n                            </div>\n                          </Tab>\n\n                          <Tab\n                            eventKey=\"playlists\"\n                            title={\n                              !!search && !!meta.playlists\n                                ? `playlist (${meta.playlists})`\n                                : 'playlist (0)'\n                            }\n                          >\n                            <div className=\"results_search\">\n                              {!!search && search.length > 0 ? (\n                                search.map((res) => (\n                                  <>\n                                    {res.model === 'Playlist' && (\n                                      <div className=\"box\">\n                                        <div className=\"imgbox\">\n                                          {res.thumb_url ? (\n                                            <div\n                                              style={{\n                                                backgroundImage: res.thumb_url.includes('pexels.com')\n                                                  ? `url(${res.thumb_url})`\n                                                  : `url(${global.config.resourceUrl}${res.thumb_url})`,\n                                              }}\n                                            />\n                                          ) : (\n                                            <div\n                                              style={{\n                                                // eslint-disable-next-line max-len\n                                                backgroundImage: 'https://images.pexels.com/photos/593158/pexels-photo-593158.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=1&amp;fit=crop&amp;h=200&amp;w=280',\n                                              }}\n                                            />\n                                          )}\n\n                                          {/* <h5>CALCULUS</h5> */}\n                                        </div>\n\n                                        <div className=\"content\">\n                                          <div className=\"search-content\">\n                                            <a\n                                              href={\n                                                res.model === 'Activity'\n                                                  // eslint-disable-next-line max-len\n                                                  ? `/studio/activity/${res.id}/shared`\n                                                  : res.model === 'Playlist'\n                                                    ? `/studio/playlist/${res.id}/preview/lti`\n                                                    : `/studio/project/${res.id}/shared`\n                                              }\n                                              target=\"_blank\"\n                                              rel=\"noreferrer\"\n                                            >\n                                              <h2>{res.title || res.name}</h2>\n                                            </a>\n                                            <ul>\n                                              {res.user && (\n                                                <li>\n                                                  by\n                                                  {' '}\n                                                  <span>\n                                                    {res.user.first_name}\n                                                  </span>\n                                                </li>\n                                              )}\n                                              <li>\n                                                Type\n                                                {' '}\n                                                <span className=\"type\">{res.model}</span>\n                                              </li>\n                                              {/* <li>\n                                                Member Rating{\" \"}\n                                                <span className=\"type\">Project</span>\n                                              </li> */}\n                                            </ul>\n                                            <p>{res.description}</p>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    )}\n                                  </>\n                                ))\n                              ) : (\n                                <div className=\"box\">No result found !</div>\n                              )}\n                            </div>\n                          </Tab>\n\n                          <Tab\n                            eventKey=\"activities\"\n                            title={\n                              !!search && !!meta.activities\n                                ? `activity (${meta.activities})`\n                                : 'activity (0)'\n                            }\n                          >\n                            <div className=\"content\">\n                              <div className=\"results_search\">\n                                {!!search && search.length > 0 ? (\n                                  search.map((res) => (\n                                    <>\n                                      {res.model === 'Activity' && (\n                                        <div className=\"box\">\n                                          <div className=\"imgbox\">\n                                            {res.thumb_url ? (\n                                              <div\n                                                style={{\n                                                  backgroundImage: res.thumb_url.includes('pexels.com')\n                                                    ? `url(${res.thumb_url})`\n                                                    : `url(${global.config.resourceUrl}${res.thumb_url})`,\n                                                }}\n                                              />\n                                            ) : (\n                                              <div\n                                                style={{\n                                                  // eslint-disable-next-line max-len\n                                                  backgroundImage: 'https://images.pexels.com/photos/593158/pexels-photo-593158.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=1&amp;fit=crop&amp;h=200&amp;w=280',\n                                                }}\n                                              />\n                                            )}\n\n                                            {/* <h5>CALCULUS</h5> */}\n                                          </div>\n\n                                          <div className=\"content\">\n                                            <div className=\"search-content\">\n                                              <a\n                                                href={\n                                                  res.model === 'Activity'\n                                                    ? `/studio/activity/${res.id}/shared`\n                                                    : res.model === 'Playlist'\n                                                      ? `/studio/playlist/${res.id}/preview/lti`\n                                                      : `/studio/project/${res.id}/shared`\n                                                }\n                                                target=\"_blank\"\n                                                rel=\"noreferrer\"\n                                              >\n                                                <h2>{res.title || res.name}</h2>\n                                              </a>\n                                              <ul>\n                                                {res.user && (\n                                                  <li>\n                                                    by\n                                                    {' '}\n                                                    <span>\n                                                      {res.user.first_name}\n                                                    </span>\n                                                  </li>\n                                                )}\n                                                <li>\n                                                  Type\n                                                  {' '}\n                                                  <span className=\"type\">{res.model}</span>\n                                                </li>\n                                                {/* <li>\n                                                  Member Rating{\" \"}\n                                                  <span className=\"type\">Project</span>\n                                                </li> */}\n                                              </ul>\n                                              <p>{res.description}</p>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </>\n                                  ))\n                                ) : (\n                                  <div className=\"box\">No result found !</div>\n                                )}\n                              </div>\n                            </div>\n                          </Tab>\n                        </Tabs>\n                        {totalCount > 20 && (\n                          <Pagination\n                            activePage={activePage}\n                            itemsCountPerPage={20}\n                            totalItemsCount={totalCount > 10000 ? 10000 : totalCount}\n                            pageRangeDisplayed={8}\n                            onChange={async (e) => {\n                              setActivePage(e);\n                              if (activeModel === 'total') {\n                                const searchData = {\n                                  phrase: searchQueries.trim(),\n                                  from: e * 20 - 20,\n                                  size: 20,\n                                  type: searchType,\n                                };\n                                Swal.fire({\n                                  title: 'Loading...',\n                                  allowOutsideClick: false,\n                                  onBeforeOpen: () => {\n                                    Swal.showLoading();\n                                  },\n                                });\n                                await dispatch(openprojectsearch(searchData));\n                                Swal.close();\n                              } else {\n                                const searchData = {\n                                  phrase: searchQueries.trim(),\n                                  from: e * 20 - 20,\n                                  size: 20,\n                                  type: searchType,\n                                  model: activeModel,\n                                };\n                                Swal.fire({\n                                  title: 'Loading...',\n                                  allowOutsideClick: false,\n                                  onBeforeOpen: () => {\n                                    Swal.showLoading();\n                                  },\n                                });\n                                await dispatch(openprojectsearch(searchData));\n                                Swal.close();\n                              }\n                            }}\n                            itemClass=\"page-item\"\n                            linkClass=\"page-link\"\n                          />\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                )\n                : (\n                  <Alert variant=\"danger\">You are not authorized to view this page!</Alert>\n                )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n// SearchInterface.propTypes = {\n//   history: PropTypes.object.isRequired,\n// };\n\nexport default SearchInterface;\n"],"sourceRoot":""}