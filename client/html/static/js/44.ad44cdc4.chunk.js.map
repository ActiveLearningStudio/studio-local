{"version":3,"sources":["containers/Teams/AddMembers/TeamMember.js","containers/Teams/AddMembers/index.js","store/actions/team.js"],"names":["TeamMember","props","teamId","authUser","removingUserId","selected","hideRemove","chosen","user","id","firstName","first_name","lastName","last_name","role","projects","selectMe","deselectMe","removeMember","trigger","handleRemove","useCallback","catch","Swal","fire","icon","title","text","className","onClick","style","margin","length","type","disabled","onBlur","map","project","index","name","defaultProps","AddMembersPage","computedMatch","params","projectId","team","selectedTeam","users","isLoading","addMembers","loadTeam","useState","search","setSearch","chosenUsers","setChosenUsers","organization","useSelector","state","teamPermission","dispatch","useDispatch","handleChangeSearch","e","target","value","useEffect","Object","keys","currentOrganization","getTeamPermission","handleAssign","then","selectedMember","setSelectedMember","thisUsers","find","parseInt","filteredUsers","_","filter","p","findIndex","u","toLowerCase","indexOf","finishButton","placeholder","onChange","userId","slice","triggerUsers","connect","auth","removeMemberAction","loadTeamAction","userIds","addMembersToProjectAction","resetSelectedTeamAction","a","actionTypes","updateSelectedTeamAction","payload","showCreationAction","showInvitingAction","showAssigningAction","loadTeamsAction","centralizedState","store","getState","activeOrganization","teamService","getAll","teams","loadSubOrganizationTeamsAction","getAllSubOrganizationTeams","createTeamAction","data","create","get","updateTeamAction","update","deleteTeamAction","remove","inviteTeamMemberAction","inviteConfirm","invited","inviteTeamMembersAction","inviteMembersAction","note","inviteMembers","email","addProjectsAction","ids","addProjects","result","removeProjectAction","removeProject","addMembersToProject","removeMemberFromProjectAction","removeMemberFromProject","AddTeamRoles","orgId","teamRoleType","teamRoleTypes","TeamId","teamPermisison","teamPermissions","getTeamProject","query","page","changeUserRole","selectedProjectForCloning","projectName"],"mappings":"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","file":"static/js/44.ad44cdc4.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Swal from 'sweetalert2';\n\nfunction TeamMember(props) {\n  const {\n    teamId,\n    authUser,\n    removingUserId,\n    selected,\n    hideRemove,\n    chosen,\n    user: {\n      id,\n      first_name: firstName,\n      last_name: lastName,\n      role,\n      projects = [],\n    },\n    selectMe,\n    deselectMe,\n    removeMember,\n    trigger,\n  } = props;\n\n  const handleRemove = useCallback(() => {\n    removeMember(teamId, id)\n      .catch(() => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'Failed to remove user.',\n        });\n      });\n  }, [teamId, id, removeMember]);\n\n  return (\n    <>\n      <div className=\"col-md-12 member-item\">\n        <div className={`member-name-mark${chosen ? ' active' : ''}`} onClick={trigger}>\n          <span>{`${firstName[0]}${lastName[0]}`}</span>\n        </div>\n\n        <div className=\"member-info\">\n          <h2 className=\"member-name\">{`${firstName} ${lastName}`}</h2>\n\n          <div className=\"member-data d-flex align-items-center\">\n            <h2 className=\"m-0\">\n              {role === 'owner' && (\n                <>\n                  <span>Admin</span>\n                  <span style={{ margin: '0 9px' }}>●</span>\n                </>\n              )}\n              {`Assigned to ${projects.length} Projects`}\n            </h2>\n\n            {projects.length > 0 && (\n              <div className=\"collapse-btn\" onClick={selected ? deselectMe : selectMe}>\n                <button type=\"button\">\n                  <FontAwesomeIcon icon={selected ? 'caret-up' : 'caret-down'} className=\"mr-2\" />\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {(authUser.role === 'owner' && authUser.id !== id && !hideRemove) && (\n          <div className=\"button-container\">\n            <button\n              type=\"button\"\n              className=\"eliminate-btn\"\n              disabled={removingUserId}\n              onClick={handleRemove}\n            >\n              <FontAwesomeIcon icon=\"plus\" className=\"mr-2\" />\n              <span>{authUser.id === id ? 'Leave' : 'Remove'}</span>\n\n              {removingUserId === id && (\n                <FontAwesomeIcon icon=\"spinner\" className=\"spinner\" />\n              )}\n            </button>\n          </div>\n        )}\n      </div>\n\n      {selected && (\n        <div className=\"member-project-dialog\" onBlur={deselectMe}>\n          <div onClick={deselectMe}>\n            <FontAwesomeIcon icon=\"plus\" className=\"mr-2\" />\n          </div>\n\n          {projects.map((project, index) => (\n            <h2 key={project.id} className={`${index > 0 ? 'border-top' : ''}`}>\n              {project.name}\n            </h2>\n          ))}\n        </div>\n      )}\n    </>\n  );\n}\n\nTeamMember.propTypes = {\n  teamId: PropTypes.number.isRequired,\n  authUser: PropTypes.object.isRequired,\n  removingUserId: PropTypes.number,\n  selected: PropTypes.bool,\n  chosen: PropTypes.bool.isRequired,\n  hideRemove: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  selectMe: PropTypes.func.isRequired,\n  deselectMe: PropTypes.func.isRequired,\n  removeMember: PropTypes.func.isRequired,\n  trigger: PropTypes.func.isRequired,\n};\n\nTeamMember.defaultProps = {\n  selected: false,\n  removingUserId: null,\n  hideRemove: false,\n};\n\nexport default TeamMember;\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Swal from 'sweetalert2';\nimport _ from 'lodash';\nimport {\n  removeMemberAction,\n  loadTeamAction,\n  addMembersToProjectAction,\n  getTeamPermission,\n} from 'store/actions/team';\n// import Header from 'components/Header';\n// import Sidebar from 'components/Sidebar';\nimport TeamMember from './TeamMember';\n\nimport './style.scss';\n\nfunction AddMembersPage(props) {\n  const {\n    removingUserId,\n    user,\n    computedMatch: { params: { teamId, projectId } },\n    team: {\n      selectedTeam: {\n        id,\n        users,\n        projects,\n      },\n      isLoading,\n    },\n    removeMember,\n    addMembers,\n    loadTeam,\n  } = props;\n\n  const [search, setSearch] = useState('');\n  const [chosenUsers, setChosenUsers] = useState([]);\n  const organization = useSelector((state) => state.organization);\n  const { teamPermission } = useSelector((state) => state.team);\n  const dispatch = useDispatch();\n  const handleChangeSearch = useCallback((e) => {\n    setSearch(e.target.value);\n  }, []);\n\n  const triggerUsers = (userId) => {\n    const index = chosenUsers.indexOf(userId);\n    const chosen = chosenUsers;\n    if (index > -1) {\n      setChosenUsers([...chosen.slice(0, index), ...chosen.slice(index + 1, chosen.length)]);\n    } else {\n      setChosenUsers([...chosen, userId]);\n    }\n  };\n\n  useEffect(() => {\n    loadTeam(teamId);\n  }, [loadTeam, teamId]);\n  // Fetch team permission if page reloads\n  useEffect(() => {\n    if (Object.keys(teamPermission).length === 0 && organization?.currentOrganization?.id && id) {\n      dispatch(getTeamPermission(organization?.currentOrganization?.id, id));\n    }\n  }, [teamPermission]);\n  const handleAssign = useCallback(() => {\n    addMembers(id, projectId, chosenUsers)\n      .then(() => {\n        setSearch('');\n      })\n      .catch(() => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'Failed to add member.',\n        });\n      });\n  }, [addMembers, chosenUsers, id, projectId]);\n\n  const [selectedMember, setSelectedMember] = useState(null);\n\n  if (!projects) return <></>;\n\n  // TODO need to be clean up\n  const thisUsers = projects.find((project) => project.id === parseInt(projectId, 10)).users;\n  let filteredUsers = _.filter(users,\n    (p) => (thisUsers || []).findIndex((u) => p.id === u.id) === -1);\n\n  filteredUsers = filteredUsers\n    ? filteredUsers.filter((u) => `${u.first_name} ${u.last_name}`.toLowerCase().indexOf(search.toLowerCase()) > -1)\n    : [];\n\n  const authUser = users ? users.find((u) => u.id === user.id) : [];\n\n  const finishButton = () => (\n    <button\n      type=\"button\"\n      className=\"create-team-submit-btn\"\n      disabled={isLoading}\n      onClick={handleAssign}\n    >\n      Add\n\n      {isLoading && (\n        <FontAwesomeIcon icon=\"spinner\" />\n      )}\n    </button>\n  );\n\n  return (\n    <>\n      <div className=\"teams-page\">\n        {/* <div className=\"sidebar-wrapper\">\n          <Sidebar />\n        </div> */}\n\n        <div className=\"content-wrapper\">\n          <div className=\"content\">\n            <div className=\"member-add\">\n              <div className=\"title-box\">\n                <h2 className=\"title\">Assign Members</h2>\n                <div className=\"title-cross\" />\n              </div>\n\n              <div className=\"team-information\">\n                <div className=\"member-management-wrapper\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"search-box\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Filter by name\"\n                          value={search}\n                          onChange={handleChangeSearch}\n                        />\n\n                        {finishButton()}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"member-list\">\n                        {filteredUsers.map((u) => (\n                          <div key={u.id}>\n                            <TeamMember\n                              teamId={id}\n                              authUser={authUser}\n                              removingUserId={removingUserId}\n                              selected={selectedMember === u.id}\n                              user={u}\n                              hideRemove\n                              selectMe={() => setSelectedMember(u.id)}\n                              deselectMe={() => setSelectedMember(null)}\n                              removeMember={removeMember}\n                              chosen={chosenUsers.indexOf(u.id) > -1}\n                              trigger={() => triggerUsers(u.id)}\n                            />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {finishButton()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nAddMembersPage.propTypes = {\n  removingUserId: PropTypes.number,\n  user: PropTypes.object.isRequired,\n  team: PropTypes.object.isRequired,\n  computedMatch: PropTypes.object.isRequired,\n  removeMember: PropTypes.func.isRequired,\n  loadTeam: PropTypes.func.isRequired,\n  addMembers: PropTypes.func.isRequired,\n};\n\nAddMembersPage.defaultProps = {\n  removingUserId: null,\n};\n\nconst mapStateToProps = (state) => ({\n  removingUserId: state.team.removingUserId,\n  user: state.auth.user,\n  team: state.team,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeMember: (teamId, userId) => dispatch(removeMemberAction(teamId, userId)),\n  loadTeam: (teamId) => dispatch(loadTeamAction(teamId)),\n  addMembers: (teamId, projectId, userIds) => dispatch(addMembersToProjectAction(teamId, projectId, userIds)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMembersPage);\n","import teamService from 'services/team.service';\nimport Swal from 'sweetalert2';\nimport * as actionTypes from '../actionTypes';\nimport store from '../index';\n\nexport const resetSelectedTeamAction = () => async (dispatch) => {\n  dispatch({\n    type: actionTypes.RESET_SELECTED_TEAM,\n  });\n};\n\nexport const updateSelectedTeamAction = (payload) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.UPDATE_SELECTED_TEAM,\n    payload,\n  });\n};\n\nexport const showCreationAction = () => async (dispatch) => {\n  dispatch({\n    type: actionTypes.SHOW_CREATE_TEAM,\n  });\n};\n\nexport const showInvitingAction = () => async (dispatch) => {\n  dispatch({\n    type: actionTypes.SHOW_INVITE_MEMBER,\n  });\n};\n\nexport const showAssigningAction = () => async (dispatch) => {\n  dispatch({\n    type: actionTypes.SHOW_ASSIGN_TEAM,\n  });\n};\n\nexport const loadTeamsAction = () => async (dispatch) => {\n  const centralizedState = store.getState();\n  const { organization: { activeOrganization } } = centralizedState;\n  try {\n    dispatch({\n      type: actionTypes.PAGE_LOADING,\n    });\n\n    const { teams } = await teamService.getAll(activeOrganization?.id);\n\n    dispatch({\n      type: actionTypes.LOAD_TEAMS,\n      payload: { teams },\n    });\n\n    dispatch({\n      type: actionTypes.PAGE_LOADING_COMPLETE,\n    });\n  } catch (e) {\n    dispatch({\n      type: actionTypes.PAGE_LOADING_COMPLETE,\n    });\n\n    throw e;\n  }\n};\n\nexport const loadSubOrganizationTeamsAction = () => async (dispatch) => {\n  const centralizedState = store.getState();\n  const { organization: { activeOrganization } } = centralizedState;\n  try {\n    dispatch({\n      type: actionTypes.PAGE_LOADING,\n    });\n\n    const { teams } = await teamService.getAllSubOrganizationTeams(activeOrganization?.id);\n\n    dispatch({\n      type: actionTypes.LOAD_TEAMS,\n      payload: { teams },\n    });\n\n    dispatch({\n      type: actionTypes.PAGE_LOADING_COMPLETE,\n    });\n  } catch (e) {\n    dispatch({\n      type: actionTypes.PAGE_LOADING_COMPLETE,\n    });\n\n    throw e;\n  }\n};\n\nexport const createTeamAction = (data) => async (dispatch) => {\n  const centralizedState = store.getState();\n  const { organization: { activeOrganization } } = centralizedState;\n  try {\n    dispatch({ type: actionTypes.CREATE_TEAM_REQUEST });\n\n    const { team } = await teamService.create(data, activeOrganization?.id);\n\n    dispatch({\n      type: actionTypes.CREATE_TEAM_SUCCESS,\n      payload: { team },\n    });\n\n    return team;\n  } catch (e) {\n    dispatch({ type: actionTypes.CREATE_TEAM_FAIL });\n\n    throw e;\n  }\n};\n\nexport const loadTeamAction = (teamId) => async (dispatch) => {\n  const centralizedState = store.getState();\n  const { organization: { activeOrganization } } = centralizedState;\n  try {\n    dispatch({\n      type: actionTypes.LOAD_TEAM_REQUEST,\n    });\n\n    const { team } = await teamService.get(teamId, activeOrganization?.id);\n\n    dispatch({\n      type: actionTypes.LOAD_TEAM_SUCCESS,\n      payload: { team },\n    });\n  } catch (e) {\n    dispatch({\n      type: actionTypes.LOAD_TEAM_FAIL,\n    });\n  }\n};\n\nexport const updateTeamAction = (teamId, data) => async (dispatch) => {\n  const centralizedState = store.getState();\n  const { organization: { activeOrganization } } = centralizedState;\n  try {\n    dispatch({ type: actionTypes.UPDATE_TEAM_REQUEST });\n\n    const { team } = await teamService.update(teamId, data, activeOrganization?.id);\n\n    dispatch({\n      type: actionTypes.UPDATE_TEAM_SUCCESS,\n      payload: { team },\n    });\n  } catch (e) {\n    dispatch({ type: actionTypes.UPDATE_TEAM_FAIL });\n\n    throw e;\n  }\n};\n\nexport const deleteTeamAction = (teamId) => async (dispatch) => {\n  const centralizedState = store.getState();\n  const { organization: { activeOrganization } } = centralizedState;\n  try {\n    dispatch({ type: actionTypes.DELETE_TEAM_REQUEST });\n\n    await teamService.remove(teamId, activeOrganization?.id);\n\n    dispatch({\n      type: actionTypes.DELETE_TEAM_SUCCESS,\n      payload: { teamId },\n    });\n  } catch (e) {\n    dispatch({ type: actionTypes.DELETE_TEAM_FAIL });\n\n    throw e;\n  }\n};\n\nexport const inviteTeamMemberAction = (user) => async (dispatch) => {\n  try {\n    dispatch({ type: actionTypes.INVITE_MEMBER_CONFIRM_REQUEST });\n\n    const { invited } = await teamService.inviteConfirm(user);\n\n    if (invited) {\n      dispatch({\n        type: actionTypes.INVITE_MEMBER_CONFIRM_SUCCESS,\n        payload: { users: [user] },\n      });\n    } else {\n      dispatch({ type: actionTypes.INVITE_MEMBER_CONFIRM_FAIL });\n    }\n\n    return invited;\n  } catch (e) {\n    dispatch({ type: actionTypes.INVITE_MEMBER_CONFIRM_FAIL });\n\n    throw e;\n  }\n};\n\nexport const inviteTeamMembersAction = (users) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.INVITE_MEMBER_CONFIRM_SUCCESS,\n    payload: { users },\n  });\n};\n\nexport const inviteMemberAction = (teamId, email) => async (dispatch) => {\n  try {\n    dispatch({ type: actionTypes.INVITE_MEMBERS_REQUEST });\n\n    await teamService.inviteMember(teamId, email);\n\n    dispatch({\n      type: actionTypes.INVITE_MEMBERS_SUCCESS,\n    });\n\n    dispatch(loadTeamAction(teamId));\n  } catch (e) {\n    dispatch({ type: actionTypes.INVITE_MEMBERS_FAIL });\n\n    throw e;\n  }\n};\n\nexport const inviteMembersAction = (teamId, users, note) => async (dispatch) => {\n  const centralizedState = store.getState();\n  const { organization: { activeOrganization } } = centralizedState;\n  try {\n    dispatch({ type: actionTypes.INVITE_MEMBERS_REQUEST });\n\n    await teamService.inviteMembers(teamId, users, note, activeOrganization?.id);\n\n    dispatch({\n      type: actionTypes.INVITE_MEMBERS_SUCCESS,\n    });\n\n    dispatch(loadTeamAction(teamId));\n  } catch (e) {\n    dispatch({ type: actionTypes.INVITE_MEMBERS_FAIL });\n\n    throw e;\n  }\n};\n\nexport const removeMemberAction = (teamId, userId, email) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actionTypes.REMOVE_MEMBER_REQUEST,\n      payload: { userId },\n    });\n\n    await teamService.removeMember(teamId, userId, email);\n\n    dispatch({\n      type: actionTypes.REMOVE_MEMBER_SUCCESS,\n    });\n\n    dispatch(loadTeamAction(teamId));\n  } catch (e) {\n    dispatch({ type: actionTypes.REMOVE_MEMBER_FAIL });\n\n    throw e;\n  }\n};\n\nexport const addProjectsAction = (teamId, ids) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actionTypes.ADD_TEAM_PROJECTS_REQUEST,\n    });\n\n    const result = await teamService.addProjects(teamId, ids);\n\n    dispatch({\n      type: actionTypes.ADD_TEAM_PROJECTS_SUCCESS,\n    });\n\n    dispatch(loadTeamAction(teamId));\n    return result;\n  } catch (e) {\n    dispatch({ type: actionTypes.ADD_TEAM_PROJECTS_FAIL });\n\n    throw e;\n  }\n};\n\nexport const removeProjectAction = (teamId, id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actionTypes.REMOVE_PROJECT_REQUEST,\n    });\n\n    await teamService.removeProject(teamId, id);\n\n    dispatch({\n      type: actionTypes.REMOVE_PROJECT_SUCCESS,\n    });\n\n    dispatch(loadTeamAction(teamId));\n  } catch (e) {\n    dispatch({ type: actionTypes.REMOVE_PROJECT_FAIL });\n\n    throw e;\n  }\n};\n\nexport const addMembersToProjectAction = (teamId, projectId, ids) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actionTypes.ADD_MEMBERS_TO_PROJECT_REQUEST,\n    });\n\n    await teamService.addMembersToProject(teamId, projectId, ids);\n\n    dispatch({\n      type: actionTypes.ADD_MEMBERS_TO_PROJECT_SUCCESS,\n    });\n\n    dispatch(loadTeamAction(teamId));\n  } catch (e) {\n    dispatch({ type: actionTypes.ADD_MEMBERS_TO_PROJECT_FAIL });\n\n    throw e;\n  }\n};\n\nexport const removeMemberFromProjectAction = (teamId, projectId, id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actionTypes.REMOVE_MEMBER_FROM_PROJECT_REQUEST,\n    });\n\n    await teamService.removeMemberFromProject(teamId, projectId, id);\n\n    dispatch({\n      type: actionTypes.REMOVE_MEMBER_FROM_PROJECT_SUCCESS,\n    });\n\n    dispatch(loadTeamAction(teamId));\n  } catch (e) {\n    dispatch({ type: actionTypes.REMOVE_MEMBER_FROM_PROJECT_FAIL });\n\n    throw e;\n  }\n};\n\nexport const AddTeamRoles = (orgId) => async (dispatch) => {\n  const result = await teamService.teamRoleType(orgId);\n  dispatch({\n    type: actionTypes.ADD_TEAM_ROLES,\n    payload: result?.teamRoleTypes,\n  });\n};\n\nexport const getTeamPermission = (orgId, TeamId) => async (dispatch) => {\n  const result = await teamService.teamPermisison(orgId, TeamId);\n  dispatch({\n    type: actionTypes.ADD_TEAM_PERMISSION,\n    payload: result?.teamPermissions,\n  });\n};\n\nexport const clearTeamPermissions = () => (dispatch) => {\n  dispatch({\n    type: actionTypes.CLEAR_TEAM_PERMISSIONS,\n  });\n};\n\nexport const getTeamProject = (query, page) => async (dispatch) => {\n  const centralizedState = store.getState();\n  const { organization: { activeOrganization } } = centralizedState;\n  const result = await teamService.getTeamProject(activeOrganization?.id, query, page);\n  dispatch({\n    type: actionTypes.GET_TEAM_PROJECTS,\n    payload: result.data,\n  });\n  return result;\n};\n\nexport const changeUserRole = (teamId, data) => async (dispatch) => {\n  const centralizedState = store.getState();\n  const { organization: { activeOrganization } } = centralizedState;\n  await teamService.changeUserRole(activeOrganization?.id, teamId, data);\n  Swal.fire({\n    icon: 'success',\n    title: 'Permission Updated',\n  });\n  dispatch({\n    type: actionTypes.CHANGE_USER_ROLE,\n  });\n};\n\nexport const selectedProjectForCloning = (projectName) => (dispatch) => {\n  dispatch({\n    type: actionTypes.PROJECT_SELECTED_FOR_CLONE,\n    payload: projectName,\n  });\n};\n"],"sourceRoot":""}