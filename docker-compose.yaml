version: "3.7"
services:

  
  currikiprod-postgres:
    image: postgres
    container_name: currikiprod-postgres
    restart: unless-stopped
    tty: true
    ports:
      - 30000:5432
    environment:
      POSTGRES_USER: curriki
      POSTGRES_PASSWORD: password
      POSTGRES_DB: studiodb-pg
      PGDATA: /var/lib/postgresql/data/currikiprod-postgresdata/
    volumes:
      - ./postgresdata:/var/lib/postgresql/data/currikiprod-postgresdata/
      - ./postgresscripts:/postgresscripts
      - ./postgresscripts/setup.sql:/docker-entrypoint-initdb.d/setup.sql:ro
      - ./postgresscripts/traxdb.sql:/docker-entrypoint-initdb.d/traxdb.sql:ro
      # - ./data/postgres/postgresql.conf:/var/lib/postgresql/data/currikiprod-postgresdata/abc/postgresql.conf
    networks:
      - currikiprod-laravel
    
  currikiprod-pgadmin:
    image: dpage/pgadmin4:4.18
    container_name: currikiprod-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 30100:80
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
      - ./postgresscripts:/postgresscripts
    links:
      - "currikiprod-postgres:pgsql-server"
    networks:
      - currikiprod-laravel
  
  currikiprod-mysql:
    image: mariadb
    container_name: currikiprod-mysql
    restart: unless-stopped
    tty: true
    volumes:
      - ./mysqldata:/var/lib/mysql
      - ./mysqlscripts/tsugisetup.sql:/docker-entrypoint-initdb.d/tsugisetup.sql:ro
      # - ./tmp/database/setup.sql:/docker-entrypoint-initdb.d/setup.sql:ro
      # - ./tmp/database/install_db.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./mysqlscripts:/mysqlscripts
    environment:
      MYSQL_DATABASE: studio-mysql
      MYSQL_USER: studio
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    # command: mysqld --init-file="/tmp/database/install_db.sql"
    ports:
      - 30200:3306
    networks:
      - currikiprod-laravel

  currikiprod-phpmyadmin:
    depends_on:
      - currikiprod-mysql
    image: phpmyadmin/phpmyadmin
    container_name: currikiprod-phpmyadmin
    restart: always
    ports:
      - 30300:80
    # volumes:
    #   - ./php.ini:/usr/local/etc/php/php.ini
    environment:
      PMA_HOST: currikiprod-mysql
      MYSQL_ROOT_PASSWORD: password
      PMA_ABSOLUTE_URI: http://127.0.0.1:30300
    networks:
      - currikiprod-laravel
      
#   currikiprod-nginx:
#     image: nginx:1.15-alpine
#     restart: unless-stopped
#     container_name: currikiprod-nginx
#     volumes:
#       - ./data/nginx/prod-conf:/etc/nginx/conf.d
#     #   - ./data/certbot/conf:/etc/letsencrypt
#     #   - ./data/certbot/www:/var/www/certbot
#       - ./data/nginx/log:/var/log/nginx
#     ports:
#       - 80:80
#     #   - 443:443
#     depends_on:
#       - currikiprod-client
#       - currikiprod-api
#       - currikiprod-trax
#       - currikiprod-tsugi
#     command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
#     networks:
#       - currikiprod-laravel
    
  currikiprod-api:
    # build:
    #   dockerfile: ./Dockerfile
    #   context: ./api
    container_name: currikiprod-api
    image: quay.io/curriki/api:local
    ports:
      - 30400:80
      # - 4003:4003
    volumes:
    #   - ./api/laravel-echo-server.json:/var/www/html/laravel-echo-server.json
    #   - ./api/storage:/var/www/html/storage
    #   - ./api/.env:/var/www/html/.env
      - ./api:/var/www/html
      - /vendor
    #   - ./php.ini:/usr/local/etc/php/php.ini
    restart: always
    networks:
      - currikiprod-laravel



  currikiprod-client:
    # build:
    #   dockerfile: ./Dockerfile
    #   context: ./client
    image: quay.io/curriki/client:local
    container_name: currikiprod-client
    volumes:
      - /app/node_modules
      - ./client:/app
    restart: always
    ports:
      - 3000:3000
    networks:
      - currikiprod-laravel


  currikiprod-trax:
    # build:
    #   dockerfile: ./Dockerfile
    #   context: ./trax-lrs
    image: quay.io/curriki/trax:latest
    container_name: currikiprod-trax
    ports:
      - 30600:6900
    volumes:
      - ./trax-lrs:/var/www/html
    restart: always
    networks:
      - currikiprod-laravel
    

  currikiprod-tsugi:
    # build:
    #   dockerfile: ./Dockerfile
    #   context: ./tsugi
    image: quay.io/curriki/tsugi:latest
    container_name: currikiprod-tsugi
    ports:
      - 30700:6300
    volumes:
      - ./tsugi:/var/www/html/tsugi
    restart: always
    networks:
      - currikiprod-laravel


  currikiprod-elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
    container_name: currikiprod-elastic
    environment:
      - node.name=currikiprod-elastic
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=elastic123
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - xpack.security.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    ports:
      - 30800:9200
    networks:
      - currikiprod-laravel
  

networks:
  currikiprod-laravel:
    name: currikiprod-laravel
    driver: bridge
